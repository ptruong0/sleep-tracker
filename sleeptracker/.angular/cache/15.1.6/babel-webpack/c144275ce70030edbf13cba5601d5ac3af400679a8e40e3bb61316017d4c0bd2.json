{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { SleepService } from '../services/sleep.service';\nimport { OvernightSleepData } from '../data/overnight-sleep-data';\nlet OvernightPage = class OvernightPage {\n  constructor(sleepService, alertController, toastController) {\n    this.sleepService = sleepService;\n    this.alertController = alertController;\n    this.toastController = toastController;\n    this.submitted = false;\n    this.bedTime = '';\n    this.wakeupTime = '';\n  }\n  ngOnInit() {\n    console.log(this.allSleepData);\n    // set default wakeup time to current time\n    var d = new Date();\n    this.wakeupTime = d.toLocaleString(\"en-US\", {\n      timeZone: \"America/Los_Angeles\"\n    });\n    // set default bed time to 8 hours ago\n    // d.setHours(d.getHours() - 8);\n    this.bedTime = d.toLocaleString(\"en-US\", {\n      timeZone: \"America/Los_Angeles\"\n    });\n    // check if there is entry in sleepservice\n    this.submitted = false;\n  }\n  /* Ionic doesn't allow bindings to static variables, so this getter can be used instead. */\n  get allSleepData() {\n    return SleepService.AllSleepData;\n  }\n  get allOvernightDataReverse() {\n    return SleepService.AllOvernightData.reverse();\n  }\n  get overnightAverage() {\n    if (SleepService.AllOvernightData.length == 0) {\n      return 0;\n    }\n    var avg_diff_ms = SleepService.overnightSum / SleepService.AllOvernightData.length;\n    return Math.floor(avg_diff_ms / (1000 * 60 * 60)) + \" hr, \" + Math.floor(avg_diff_ms / (1000 * 60) % 60) + \" min\";\n  }\n  presentAlert() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const alert = yield this.alertController.create({\n        header: 'Error',\n        message: 'Invalid time range of sleep',\n        buttons: [{\n          text: 'OK',\n          cssClass: 'alert-btn'\n        }],\n        cssClass: 'alert'\n      });\n      yield alert.present();\n    });\n  }\n  presentToast(position) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const toast = yield this.toastController.create({\n        message: 'Submitted successfully!',\n        duration: 1500,\n        position: position\n      });\n      yield toast.present();\n    });\n  }\n  onSubmit() {\n    var time1 = new Date(this.bedTime);\n    var time2 = new Date(this.wakeupTime);\n    if (time2.getTime() - time1.getTime() == 0) {\n      this.presentAlert();\n      return;\n    }\n    if (time2.getTime() - time1.getTime() < 0) {\n      time1.setDate(time1.getDate() - 1);\n    }\n    this.sleepService.logOvernightData(new OvernightSleepData(time1, time2));\n    this.submitted = true;\n    this.presentToast('bottom');\n  }\n};\nOvernightPage = __decorate([Component({\n  selector: 'app-overnight',\n  templateUrl: 'overnight.page.html',\n  styleUrls: ['overnight.page.scss']\n})], OvernightPage);\nexport { OvernightPage };","map":{"version":3,"mappings":"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","names":["Component","SleepService","OvernightSleepData","OvernightPage","constructor","sleepService","alertController","toastController","ngOnInit","console","log","allSleepData","d","Date","wakeupTime","toLocaleString","timeZone","bedTime","submitted","AllSleepData","allOvernightDataReverse","AllOvernightData","reverse","overnightAverage","length","avg_diff_ms","overnightSum","Math","floor","presentAlert","alert","create","header","message","buttons","text","cssClass","present","presentToast","position","toast","duration","onSubmit","time1","time2","getTime","setDate","getDate","logOvernightData","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\philt\\inf133\\sleep-tracker\\sleeptracker\\src\\app\\overnight\\overnight.page.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { SleepService } from '../services/sleep.service';\nimport { OvernightSleepData } from '../data/overnight-sleep-data';\nimport { AlertController, ToastController } from '@ionic/angular';\nimport { Preferences } from '@capacitor/preferences';\n\n@Component({\n  selector: 'app-overnight',\n  templateUrl: 'overnight.page.html',\n  styleUrls: ['overnight.page.scss'],\n})\nexport class OvernightPage {\n\tsubmitted: boolean = false;\n\tbedTime: string = '';\n\twakeupTime: string = '';\n\n\t\n  constructor(public sleepService:SleepService, private alertController: AlertController, private toastController: ToastController) { }\n\n\tngOnInit() {\n\t\tconsole.log(this.allSleepData);\n    // set default wakeup time to current time\n\t\tvar d: Date = new Date();\n\t\tthis.wakeupTime = d.toLocaleString(\"en-US\", {timeZone: \"America/Los_Angeles\"});\n\n\t\t// set default bed time to 8 hours ago\n\t\t// d.setHours(d.getHours() - 8);\n\t\tthis.bedTime = d.toLocaleString(\"en-US\", {timeZone: \"America/Los_Angeles\"});\n\n\t\t// check if there is entry in sleepservice\n\t\tthis.submitted = false;\n\t}\n\n\t/* Ionic doesn't allow bindings to static variables, so this getter can be used instead. */\n\tget allSleepData() {\n\t\treturn SleepService.AllSleepData;\n\t}\n\n\tget allOvernightDataReverse() {\n\t\treturn SleepService.AllOvernightData.reverse();\n\t}\n\n  get overnightAverage() {\n    if (SleepService.AllOvernightData.length == 0) {\n      return 0;\n    }\n    var avg_diff_ms: number = SleepService.overnightSum / SleepService.AllOvernightData.length;\n    return Math.floor(avg_diff_ms / (1000 * 60 * 60)) + \" hr, \" + Math.floor(avg_diff_ms / (1000 * 60) % 60) + \" min\";\n\n  }\n\n  async presentAlert() {\n    const alert = await this.alertController.create({\n      header: 'Error',\n      message: 'Invalid time range of sleep',\n      buttons: [\n      {\n        text: 'OK',\n        cssClass: 'alert-btn',\n      },],\n      cssClass: 'alert'\n    });\n\n    await alert.present();\n  }\n\n  async presentToast(position: 'top' | 'middle' | 'bottom') {\n    const toast = await this.toastController.create({\n      message: 'Submitted successfully!',\n      duration: 1500,\n      position: position\n    });\n\n    await toast.present();\n  }\n\n\n\tonSubmit() {\n    var time1: Date = new Date(this.bedTime);\n    var time2: Date = new Date(this.wakeupTime);\n\n    if (time2.getTime() - time1.getTime() == 0) {\n      this.presentAlert();\n      return;\n    } \n    \n    if (time2.getTime() - time1.getTime() < 0) {\n      time1.setDate(time1.getDate() - 1);\n    }\n\n\t\tthis.sleepService.logOvernightData(new OvernightSleepData(time1, time2));\n\n\t\tthis.submitted = true;\n    this.presentToast('bottom');\n\t}\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}