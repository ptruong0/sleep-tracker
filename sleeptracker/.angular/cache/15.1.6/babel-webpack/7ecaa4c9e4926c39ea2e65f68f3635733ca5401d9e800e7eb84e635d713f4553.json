{"ast":null,"code":"import { SleepService } from '../services/sleep.service';\nimport { StanfordSleepinessData } from '../data/stanford-sleepiness-data';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/sleep.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@ionic/angular\";\nfunction DaytimePage_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"ion-item\")(2, \"ion-row\", 14)(3, \"ion-col\")(4, \"ion-text\", 15)(5, \"h1\", 3);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"ion-col\", 16)(8, \"ion-text\", 8)(9, \"p\", 17);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"ion-text\", 8)(12, \"p\", 17);\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const data_r1 = ctx.$implicit;\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(data_r1.summaryString()[0]);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(data_r1.summaryString().slice(3));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(data_r1.dateString());\n  }\n}\nexport class DaytimePage {\n  constructor(sleepService) {\n    this.sleepService = sleepService;\n    this.sliderValue = 1; // default value\n    this.sliderDescription = StanfordSleepinessData.ScaleValues[this.sliderValue];\n  }\n  ngOnInit() {}\n  get allSleepinessData() {\n    return SleepService.AllSleepinessData;\n  }\n  onSliderChange() {\n    console.log(this.sliderValue);\n    this.sliderDescription = StanfordSleepinessData.ScaleValues[this.sliderValue];\n  }\n  onSubmit() {\n    this.sleepService.logSleepinessData(new StanfordSleepinessData(this.sliderValue));\n  }\n}\nDaytimePage.ɵfac = function DaytimePage_Factory(t) {\n  return new (t || DaytimePage)(i0.ɵɵdirectiveInject(i1.SleepService));\n};\nDaytimePage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DaytimePage,\n  selectors: [[\"app-daytime\"]],\n  decls: 31,\n  vars: 4,\n  consts: [[\"size\", \"large\", 1, \"ion-text-center\"], [4, \"ngFor\", \"ngForOf\"], [\"size\", \"large\", \"color\", \"primary\", 1, \"ion-text-center\"], [1, \"ion-padding-horizontal\"], [\"min\", \"1\", \"max\", \"7\", 3, \"ngModel\", \"ionChange\", \"ngModelChange\"], [\"slot\", \"start\", \"name\", \"flash\", \"color\", \"secondary\"], [\"slot\", \"end\", \"name\", \"cloudy-night\", \"color\", \"secondary\"], [1, \"ion-justify-content-between\"], [\"color\", \"secondary\"], [1, \"ion-text-center\"], [\"color\", \"primary\", 1, \"ion-text-center\"], [1, \"ion-margin-horizontal\"], [1, \"ion-justify-content-center\"], [3, \"click\"], [1, \"data-row\"], [\"size\", \"2\", \"color\", \"secondary\"], [\"size\", \"10\", 1, \"ion-padding-horizontal\", \"col\"], [1, \"small-text\"]],\n  template: function DaytimePage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \"Sleep Tracker\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"ion-content\")(5, \"ion-item\")(6, \"ion-title\", 0);\n      i0.ɵɵtext(7, \"Recent Sleepiness Data\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"ion-list\");\n      i0.ɵɵtemplate(9, DaytimePage_div_9_Template, 14, 3, \"div\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"ion-item\")(11, \"ion-title\", 2);\n      i0.ɵɵtext(12, \"Record sleepiness\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 3)(14, \"ion-range\", 4);\n      i0.ɵɵlistener(\"ionChange\", function DaytimePage_Template_ion_range_ionChange_14_listener() {\n        return ctx.onSliderChange();\n      })(\"ngModelChange\", function DaytimePage_Template_ion_range_ngModelChange_14_listener($event) {\n        return ctx.sliderValue = $event;\n      });\n      i0.ɵɵelement(15, \"ion-icon\", 5)(16, \"ion-icon\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"ion-row\", 7)(18, \"span\", 8);\n      i0.ɵɵtext(19, \"Awake\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"span\", 8);\n      i0.ɵɵtext(21, \"Sleepy\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(22, \"ion-text\", 9)(23, \"p\");\n      i0.ɵɵtext(24);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"ion-text\", 10)(26, \"p\", 11);\n      i0.ɵɵtext(27);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(28, \"ion-row\", 12)(29, \"ion-button\", 13);\n      i0.ɵɵlistener(\"click\", function DaytimePage_Template_ion_button_click_29_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(30, \"Submit\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", ctx.allSleepinessData);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.sliderValue);\n      i0.ɵɵadvance(10);\n      i0.ɵɵtextInterpolate1(\"Level \", ctx.sliderValue, \":\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.sliderDescription);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.NgControlStatus, i3.NgModel, i4.IonButton, i4.IonCol, i4.IonContent, i4.IonHeader, i4.IonIcon, i4.IonItem, i4.IonList, i4.IonRange, i4.IonRow, i4.IonText, i4.IonTitle, i4.IonToolbar, i4.SelectValueAccessor],\n  styles: [\".sleepiness-entry[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n}\\n\\n.small-text[_ngcontent-%COMP%] {\\n  margin: 0;\\n  font-size: 1em;\\n}\\n\\n.data-row[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n.col[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGF5dGltZS9kYXl0aW1lLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7RUFDQSw4QkFBQTtFQUNBLG1CQUFBO0FBQ0Y7O0FBRUE7RUFDRSxTQUFBO0VBQ0EsY0FBQTtBQUNGOztBQUVBO0VBQ0UsV0FBQTtBQUNGOztBQUVBO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsdUJBQUE7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi5zbGVlcGluZXNzLWVudHJ5IHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4uc21hbGwtdGV4dCB7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIGZvbnQtc2l6ZTogMWVtO1xyXG59XHJcblxyXG4uZGF0YS1yb3cge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4uY29sIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,YAAY,QAAQ,2BAA2B;AAGxD,SAASC,sBAAsB,QAAQ,kCAAkC;;;;;;;;ICQrEC,2BAA4C;IAKCA,YAA2B;IAAAA,iBAAK;IAGvEA,mCAAsD;IAE5BA,aAAiC;IAAAA,iBAAI;IAE7DA,oCAA4B;IACJA,aAAqB;IAAAA,iBAAI;;;;IARZA,eAA2B;IAA3BA,gDAA2B;IAKxCA,eAAiC;IAAjCA,sDAAiC;IAGjCA,eAAqB;IAArBA,0CAAqB;;;ADdzD,OAAM,MAAOC,WAAW;EAItBC,YAAmBC,YAAyB;IAAzB,iBAAY,GAAZA,YAAY;IAC7B,IAAI,CAACC,WAAW,GAAG,CAAC,CAAC,CAAC;IACxB,IAAI,CAACC,iBAAiB,GAAGN,sBAAsB,CAACO,WAAW,CAAC,IAAI,CAACF,WAAW,CAAC;EAC5E;EAEDG,QAAQ,IACR;EAGA,IAAIC,iBAAiB;IACrB,OAAOV,YAAY,CAACW,iBAAiB;EACtC;EAECC,cAAc;IACdC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,WAAW,CAAC;IAC7B,IAAI,CAACC,iBAAiB,GAAGN,sBAAsB,CAACO,WAAW,CAAC,IAAI,CAACF,WAAW,CAAC;EAC9E;EAECS,QAAQ;IACN,IAAI,CAACV,YAAY,CAACW,iBAAiB,CAAC,IAAIf,sBAAsB,CAAC,IAAI,CAACK,WAAW,CAAC,CAAC;EACnF;;;mBAxBWH,WAAW;AAAA;;QAAXA,WAAW;EAAAc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXxBnB,kCAAY;MAEGA,6BAAa;MAAAA,iBAAY;MAIxCA,mCAAa;MAEuCA,sCAAsB;MAAAA,iBAAY;MAGpFA,gCAAU;MACRA,6DAkBM;MACRA,iBAAW;MAEXA,iCAAU;MACwDA,kCAAiB;MAAAA,iBAAY;MAG/FA,+BAAoC;MACPA;QAAA,OAAaoB,oBAAgB;MAAA,EAAC;QAAA;MAAA;MACvDpB,+BAAiE;MAEnEA,iBAAY;MACZA,mCAA6C;MACnBA,sBAAK;MAAAA,iBAAO;MACpCA,gCAAwB;MAAAA,uBAAM;MAAAA,iBAAO;MAIzCA,oCAAkC;MAC7BA,aAAsB;MAAAA,iBAAI;MAE/BA,qCAAkD;MACfA,aAAqB;MAAAA,iBAAI;MAE5DA,oCAA4C;MAC9BA;QAAA,OAASoB,cAAU;MAAA,EAAC;MAACpB,uBAAM;MAAAA,iBAAa;;;MA3C9BA,eAAoB;MAApBA,+CAAoB;MA0BgBA,eAAyB;MAAzBA,yCAAyB;MAWhFA,gBAAsB;MAAtBA,qDAAsB;MAGQA,eAAqB;MAArBA,2CAAqB","names":["SleepService","StanfordSleepinessData","i0","DaytimePage","constructor","sleepService","sliderValue","sliderDescription","ScaleValues","ngOnInit","allSleepinessData","AllSleepinessData","onSliderChange","console","log","onSubmit","logSleepinessData","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\philt\\inf133\\sleep-tracker\\sleeptracker\\src\\app\\daytime\\daytime.page.ts","C:\\Users\\philt\\inf133\\sleep-tracker\\sleeptracker\\src\\app\\daytime\\daytime.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { SleepService } from '../services/sleep.service';\nimport { SleepData } from '../data/sleep-data';\nimport { OvernightSleepData } from '../data/overnight-sleep-data';\nimport { StanfordSleepinessData } from '../data/stanford-sleepiness-data';\n\n@Component({\n  selector: 'app-daytime',\n  templateUrl: './daytime.page.html',\n  styleUrls: ['./daytime.page.scss'],\n})\nexport class DaytimePage implements OnInit {\n  sliderValue: number;\n\tsliderDescription: string | undefined;\n\n  constructor(public sleepService:SleepService) {\n    this.sliderValue = 1;\t// default value\n\t\tthis.sliderDescription = StanfordSleepinessData.ScaleValues[this.sliderValue];\n   }\n\n  ngOnInit() {\n  }\n\n\n  get allSleepinessData() {\n\t\treturn SleepService.AllSleepinessData;\n\t}\n\n  onSliderChange() {\n\t\tconsole.log(this.sliderValue);\n\t\tthis.sliderDescription = StanfordSleepinessData.ScaleValues[this.sliderValue];\n\t}\n\n  onSubmit() {\n    this.sleepService.logSleepinessData(new StanfordSleepinessData(this.sliderValue));\n  }\n}\n","<ion-header>\n  <ion-toolbar>\n    <ion-title>Sleep Tracker</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-item>\n    <ion-title size=\"large\" class=\"ion-text-center\">Recent Sleepiness Data</ion-title>\n  </ion-item>\n\n  <ion-list>\n    <div *ngFor=\"let data of allSleepinessData\">\n      <ion-item>\n        <ion-row class=\"data-row\">\n          <ion-col >\n            <ion-text size=\"2\" color=\"secondary\" >\n              <h1 class=\"ion-padding-horizontal\">{{data.summaryString()[0]}}</h1>\n            </ion-text>\n          </ion-col>\n          <ion-col size=\"10\" class=\"ion-padding-horizontal col\">\n            <ion-text color=\"secondary\">\n              <p class=\"small-text\">{{data.summaryString().slice(3)}}</p>\n            </ion-text>\n            <ion-text color=\"secondary\">\n              <p class=\"small-text\">{{data.dateString()}}</p>\n            </ion-text>\n          </ion-col>\n        </ion-row>\n      </ion-item>\n    </div>\n  </ion-list>\n\n  <ion-item>\n    <ion-title size=\"large\" class=\"ion-text-center\" color=\"primary\">Record sleepiness</ion-title>\n  </ion-item>\n\n  <div class=\"ion-padding-horizontal\">\n    <ion-range min=\"1\" max=\"7\" (ionChange)=\"onSliderChange()\" [(ngModel)]=\"sliderValue\">\n      <ion-icon slot=\"start\" name=\"flash\" color=\"secondary\"></ion-icon>\n      <ion-icon slot=\"end\" name=\"cloudy-night\" color=\"secondary\"></ion-icon>\n    </ion-range>\n    <ion-row class=\"ion-justify-content-between\">\n      <span color=\"secondary\">Awake</span>\n      <span color=\"secondary\">Sleepy</span>\n    </ion-row>\n  </div>\n\n  <ion-text class=\"ion-text-center\">\n    <p>Level {{sliderValue}}:</p>\n  </ion-text>\n  <ion-text color=\"primary\" class=\"ion-text-center\">\n    <p class=\"ion-margin-horizontal\">{{sliderDescription}}</p>\n  </ion-text>\n  <ion-row class=\"ion-justify-content-center\">\n    <ion-button (click)=\"onSubmit()\">Submit</ion-button>\n  </ion-row>\n</ion-content>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}