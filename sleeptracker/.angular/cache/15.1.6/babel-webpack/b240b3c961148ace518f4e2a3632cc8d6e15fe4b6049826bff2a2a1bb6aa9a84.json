{"ast":null,"code":"import { SleepService } from '../services/sleep.service';\nimport { OvernightSleepData } from '../data/overnight-sleep-data';\nimport { StanfordSleepinessData } from '../data/stanford-sleepiness-data';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/sleep.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@ionic/angular\";\nexport class HomePage {\n  constructor(sleepService) {\n    this.sleepService = sleepService;\n    // set default wakeup time to current time\n    var d = new Date();\n    this.wakeupTime = d.toLocaleString(\"en-US\", {\n      timeZone: \"America/Los_Angeles\"\n    });\n    // set default bed time to 8 hours ago\n    // d.setHours(d.getHours() - 8);\n    this.bedTime = d.toLocaleString(\"en-US\", {\n      timeZone: \"America/Los_Angeles\"\n    });\n    this.sliderValue = 1; // default value\n    this.sliderDescription = StanfordSleepinessData.ScaleValues[this.sliderValue];\n  }\n  ngOnInit() {\n    console.log(this.allSleepData);\n  }\n  /* Ionic doesn't allow bindings to static variables, so this getter can be used instead. */\n  get allSleepData() {\n    return SleepService.AllSleepData;\n  }\n  get allSleepinessData() {\n    return SleepService.AllSleepinessData;\n  }\n  onSubmit() {\n    console.log(this.bedTime);\n    console.log(this.wakeupTime);\n    console.log(typeof this.bedTime);\n    this.sleepService.logOvernightData(new OvernightSleepData(new Date(this.bedTime), new Date(this.wakeupTime)));\n  }\n  onSliderChange() {\n    console.log(this.sliderValue);\n    this.sliderDescription = StanfordSleepinessData.ScaleValues[this.sliderValue];\n  }\n}\nHomePage.ɵfac = function HomePage_Factory(t) {\n  return new (t || HomePage)(i0.ɵɵdirectiveInject(i1.SleepService));\n};\nHomePage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomePage,\n  selectors: [[\"app-home\"]],\n  decls: 28,\n  vars: 4,\n  consts: [[3, \"translucent\"], [3, \"fullscreen\"], [\"collapse\", \"condense\"], [\"size\", \"large\"], [1, \"ion-text-center\"], [1, \"ion-justify-content-center\"], [1, \"time-column\"], [\"name\", \"bed-outline\", \"size\", \"large\", 1, \"ion-padding-vertical\"], [\"presentation\", \"time\", \"displayFormat\", \"h:mm\", \"locale\", \"en-US\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"alarm\", \"size\", \"large\", 1, \"ion-padding-vertical\"], [3, \"click\"]],\n  template: function HomePage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \" Sleep Tracker \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"ion-content\", 1)(5, \"ion-header\", 2)(6, \"ion-toolbar\")(7, \"ion-title\", 3);\n      i0.ɵɵtext(8, \"Sleep Tracker\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"ion-title\", 4)(10, \"h1\");\n      i0.ɵɵtext(11, \"Good morning!\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"ion-row\", 5)(13, \"ion-col\", 6);\n      i0.ɵɵelement(14, \"ion-icon\", 7);\n      i0.ɵɵelementStart(15, \"ion-label\", 4)(16, \"h3\");\n      i0.ɵɵtext(17, \"What time did you sleep?\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"ion-datetime\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function HomePage_Template_ion_datetime_ngModelChange_18_listener($event) {\n        return ctx.bedTime = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"ion-col\", 6);\n      i0.ɵɵelement(20, \"ion-icon\", 9);\n      i0.ɵɵelementStart(21, \"ion-label\", 4)(22, \"h3\");\n      i0.ɵɵtext(23, \"What time did you wake up?\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"ion-datetime\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function HomePage_Template_ion_datetime_ngModelChange_24_listener($event) {\n        return ctx.wakeupTime = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(25, \"ion-row\", 5)(26, \"ion-button\", 10);\n      i0.ɵɵlistener(\"click\", function HomePage_Template_ion_button_click_26_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(27, \"Submit\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"translucent\", true);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"fullscreen\", true);\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngModel\", ctx.bedTime);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.wakeupTime);\n    }\n  },\n  dependencies: [i2.NgControlStatus, i2.NgModel, i3.IonButton, i3.IonCol, i3.IonContent, i3.IonDatetime, i3.IonHeader, i3.IonIcon, i3.IonLabel, i3.IonRow, i3.IonTitle, i3.IonToolbar, i3.SelectValueAccessor],\n  styles: [\"#container[_ngcontent-%COMP%] {\\n  text-align: center;\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n  top: 50%;\\n  transform: translateY(-50%);\\n}\\n\\n#container[_ngcontent-%COMP%]   strong[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  line-height: 26px;\\n}\\n\\n#container[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  font-size: 16px;\\n  line-height: 22px;\\n  color: #8c8c8c;\\n  margin: 0;\\n}\\n\\n#container[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n  text-decoration: none;\\n}\\n\\n.time-column[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: start;\\n  align-items: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvaG9tZS9ob21lLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFBO0VBRUEsa0JBQUE7RUFDQSxPQUFBO0VBQ0EsUUFBQTtFQUNBLFFBQUE7RUFDQSwyQkFBQTtBQUFGOztBQUdBO0VBQ0UsZUFBQTtFQUNBLGlCQUFBO0FBQUY7O0FBR0E7RUFDRSxlQUFBO0VBQ0EsaUJBQUE7RUFFQSxjQUFBO0VBRUEsU0FBQTtBQUZGOztBQUtBO0VBQ0UscUJBQUE7QUFGRjs7QUFLQTtFQUNFLGFBQUE7RUFDQSxzQkFBQTtFQUNBLHNCQUFBO0VBQ0EsbUJBQUE7QUFGRiIsInNvdXJjZXNDb250ZW50IjpbIiNjb250YWluZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgdG9wOiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbn1cblxuI2NvbnRhaW5lciBzdHJvbmcge1xuICBmb250LXNpemU6IDIwcHg7XG4gIGxpbmUtaGVpZ2h0OiAyNnB4O1xufVxuXG4jY29udGFpbmVyIHAge1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuXG4gIGNvbG9yOiAjOGM4YzhjO1xuXG4gIG1hcmdpbjogMDtcbn1cblxuI2NvbnRhaW5lciBhIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4udGltZS1jb2x1bW4ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHN0YXJ0O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,YAAY,QAAQ,2BAA2B;AAExD,SAASC,kBAAkB,QAAQ,8BAA8B;AACjE,SAASC,sBAAsB,QAAQ,kCAAkC;;;;;AAOzE,OAAM,MAAOC,QAAQ;EAMnBC,YAAmBC,YAAyB;IAAzB,iBAAY,GAAZA,YAAY;IAC/B;IACA,IAAIC,CAAC,GAAS,IAAIC,IAAI,EAAE;IACxB,IAAI,CAACC,UAAU,GAAGF,CAAC,CAACG,cAAc,CAAC,OAAO,EAAE;MAACC,QAAQ,EAAE;IAAqB,CAAC,CAAC;IAE9E;IACA;IACA,IAAI,CAACC,OAAO,GAAGL,CAAC,CAACG,cAAc,CAAC,OAAO,EAAE;MAACC,QAAQ,EAAE;IAAqB,CAAC,CAAC;IAE3E,IAAI,CAACE,WAAW,GAAG,CAAC,CAAC,CAAC;IACtB,IAAI,CAACC,iBAAiB,GAAGX,sBAAsB,CAACY,WAAW,CAAC,IAAI,CAACF,WAAW,CAAC;EAC9E;EAEAG,QAAQ;IACPC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,YAAY,CAAC;EAC/B;EAEA;EACA,IAAIA,YAAY;IACf,OAAOlB,YAAY,CAACmB,YAAY;EACjC;EAEA,IAAIC,iBAAiB;IACpB,OAAOpB,YAAY,CAACqB,iBAAiB;EACtC;EAEAC,QAAQ;IACPN,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,OAAO,CAAC;IACzBK,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,UAAU,CAAC;IAC5BQ,OAAO,CAACC,GAAG,CAAC,OAAO,IAAI,CAACN,OAAO,CAAC;IAChC,IAAI,CAACN,YAAY,CAACkB,gBAAgB,CAAC,IAAItB,kBAAkB,CAAC,IAAIM,IAAI,CAAC,IAAI,CAACI,OAAO,CAAC,EAAE,IAAIJ,IAAI,CAAC,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC;EAC9G;EAEAgB,cAAc;IACbR,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,WAAW,CAAC;IAC7B,IAAI,CAACC,iBAAiB,GAAGX,sBAAsB,CAACY,WAAW,CAAC,IAAI,CAACF,WAAW,CAAC;EAC9E;;;mBA1CYT,QAAQ;AAAA;;QAARA,QAAQ;EAAAsB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXrBC,qCAAiC;MAG3BA,+BACF;MAAAA,iBAAY;MAIhBA,sCAAiC;MAGHA,6BAAa;MAAAA,iBAAY;MAInDA,oCAAmC;MAC5BA,8BAAa;MAAAA,iBAAK;MAG3BA,mCAA4C;MAExCA,+BAAkF;MAClFA,qCAAmC;MAAIA,yCAAwB;MAAAA,iBAAK;MACpEA,wCAA4F;MAAtBA;QAAA;MAAA,EAAqB;MAACA,iBAAe;MAG7GA,mCAA6B;MAC3BA,+BAA4E;MAC5EA,qCAAmC;MAAIA,2CAA0B;MAAAA,iBAAK;MACtEA,wCAA+F;MAAzBA;QAAA;MAAA,EAAwB;MAACA,iBAAe;MAKhHA,mCAA4C;MAC5BA;QAAA,OAASC,cAAU;MAAA,EAAC;MAACD,uBAAM;MAAAA,iBAAa;;;MAnChDA,kCAAoB;MAQnBA,eAAmB;MAAnBA,iCAAmB;MAe4CA,gBAAqB;MAArBA,qCAAqB;MAMrBA,eAAwB;MAAxBA,wCAAwB","names":["SleepService","OvernightSleepData","StanfordSleepinessData","HomePage","constructor","sleepService","d","Date","wakeupTime","toLocaleString","timeZone","bedTime","sliderValue","sliderDescription","ScaleValues","ngOnInit","console","log","allSleepData","AllSleepData","allSleepinessData","AllSleepinessData","onSubmit","logOvernightData","onSliderChange","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\philt\\inf133\\sleep-tracker\\sleeptracker\\src\\app\\home\\home.page.ts","C:\\Users\\philt\\inf133\\sleep-tracker\\sleeptracker\\src\\app\\home\\home.page.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { SleepService } from '../services/sleep.service';\nimport { SleepData } from '../data/sleep-data';\nimport { OvernightSleepData } from '../data/overnight-sleep-data';\nimport { StanfordSleepinessData } from '../data/stanford-sleepiness-data';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n\tbedTime: string;\n\twakeupTime: string;\n\tsliderValue: number;\n\tsliderDescription: string | undefined;\n\t\n  constructor(public sleepService:SleepService) {\n\t\t// set default wakeup time to current time\n\t\tvar d: Date = new Date();\n\t\tthis.wakeupTime = d.toLocaleString(\"en-US\", {timeZone: \"America/Los_Angeles\"});\n\n\t\t// set default bed time to 8 hours ago\n\t\t// d.setHours(d.getHours() - 8);\n\t\tthis.bedTime = d.toLocaleString(\"en-US\", {timeZone: \"America/Los_Angeles\"});\n\n\t\tthis.sliderValue = 1;\t// default value\n\t\tthis.sliderDescription = StanfordSleepinessData.ScaleValues[this.sliderValue];\n\t}\n\n\tngOnInit() {\n\t\tconsole.log(this.allSleepData);\n\t}\n\n\t/* Ionic doesn't allow bindings to static variables, so this getter can be used instead. */\n\tget allSleepData() {\n\t\treturn SleepService.AllSleepData;\n\t}\n\n\tget allSleepinessData() {\n\t\treturn SleepService.AllSleepinessData;\n\t}\n\n\tonSubmit() {\n\t\tconsole.log(this.bedTime);\n\t\tconsole.log(this.wakeupTime);\n\t\tconsole.log(typeof this.bedTime);\n\t\tthis.sleepService.logOvernightData(new OvernightSleepData(new Date(this.bedTime), new Date(this.wakeupTime)));\n\t}\n\n\tonSliderChange() {\n\t\tconsole.log(this.sliderValue);\n\t\tthis.sliderDescription = StanfordSleepinessData.ScaleValues[this.sliderValue];\n\t}\n\n}\n","<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-title>\n      Sleep Tracker \n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\">\n  <ion-header collapse=\"condense\">\n    <ion-toolbar>\n      <ion-title size=\"large\">Sleep Tracker</ion-title>\n    </ion-toolbar>\n  </ion-header>\n\n    <ion-title class=\"ion-text-center\">\n      <h1 >Good morning!</h1>\n    </ion-title>\n\n  <ion-row class=\"ion-justify-content-center\">\n    <ion-col class=\"time-column\">\n      <ion-icon name=\"bed-outline\" size=\"large\" class=\"ion-padding-vertical\"></ion-icon>\n      <ion-label class=\"ion-text-center\"><h3>What time did you sleep?</h3></ion-label>\n      <ion-datetime presentation=\"time\" displayFormat=\"h:mm\" locale=\"en-US\" [(ngModel)]=\"bedTime\"></ion-datetime>\n    </ion-col>\n  \n    <ion-col class=\"time-column\">\n      <ion-icon name=\"alarm\" size=\"large\" class=\"ion-padding-vertical\"></ion-icon>\n      <ion-label class=\"ion-text-center\"><h3>What time did you wake up?</h3></ion-label>\n      <ion-datetime presentation=\"time\" displayFormat=\"h:mm\" locale=\"en-US\" [(ngModel)]=\"wakeupTime\"></ion-datetime>\n    </ion-col>\n  </ion-row>\n  \n\n    <ion-row class=\"ion-justify-content-center\">\n        <ion-button (click)=\"onSubmit()\">Submit</ion-button>\n    </ion-row>\n  \n\n</ion-content>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}