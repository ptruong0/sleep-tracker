{"ast":null,"code":"import { SleepService } from '../services/sleep.service';\nimport { OvernightSleepData } from '../data/overnight-sleep-data';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/sleep.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@ionic/angular\";\nfunction OvernightPage_div_12_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-datetime\", 14);\n    i0.ɵɵlistener(\"ngModelChange\", function OvernightPage_div_12_ng_template_10_Template_ion_datetime_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.bedTime = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.bedTime);\n  }\n}\nfunction OvernightPage_div_12_ng_template_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-datetime\", 14);\n    i0.ɵɵlistener(\"ngModelChange\", function OvernightPage_div_12_ng_template_19_Template_ion_datetime_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.wakeupTime = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.wakeupTime);\n  }\n}\nfunction OvernightPage_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\")(2, \"ion-col\", 6);\n    i0.ɵɵelement(3, \"ion-icon\", 7);\n    i0.ɵɵelementStart(4, \"ion-label\", 8)(5, \"h2\");\n    i0.ɵɵtext(6, \"What time did you sleep?\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"ion-button\", 9);\n    i0.ɵɵtext(8, \"Select Time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"ion-popover\", 10);\n    i0.ɵɵtemplate(10, OvernightPage_div_12_ng_template_10_Template, 1, 1, \"ng-template\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"ion-col\", 6);\n    i0.ɵɵelement(12, \"ion-icon\", 11);\n    i0.ɵɵelementStart(13, \"ion-label\", 8)(14, \"h2\");\n    i0.ɵɵtext(15, \"What time did you wake up?\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"ion-button\", 9);\n    i0.ɵɵtext(17, \"Select Time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"ion-popover\", 10);\n    i0.ɵɵtemplate(19, OvernightPage_div_12_ng_template_19_Template, 1, 1, \"ng-template\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(20, \"ion-item\")(21, \"ion-row\", 12)(22, \"ion-button\", 13);\n    i0.ɵɵlistener(\"click\", function OvernightPage_div_12_Template_ion_button_click_22_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onSubmit());\n    });\n    i0.ɵɵtext(23, \"Submit\");\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction OvernightPage_div_13_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"ion-item\")(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const data_r11 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(data_r11.summaryString());\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r11.dateString());\n  }\n}\nfunction OvernightPage_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"ion-item\")(2, \"ion-title\", 15);\n    i0.ɵɵtext(3, \"Recent Sleepiness Data\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"ion-list\");\n    i0.ɵɵtemplate(5, OvernightPage_div_13_div_5_Template, 6, 2, \"div\", 16);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.allOvernightData);\n  }\n}\nexport class OvernightPage {\n  constructor(sleepService) {\n    this.sleepService = sleepService;\n    this.submitted = false;\n    this.bedTime = '';\n    this.wakeupTime = '';\n  }\n  ngOnInit() {\n    console.log(this.allSleepData);\n    // set default wakeup time to current time\n    var d = new Date();\n    this.wakeupTime = d.toLocaleString(\"en-US\", {\n      timeZone: \"America/Los_Angeles\"\n    });\n    // set default bed time to 8 hours ago\n    // d.setHours(d.getHours() - 8);\n    this.bedTime = d.toLocaleString(\"en-US\", {\n      timeZone: \"America/Los_Angeles\"\n    });\n    // check if there is entry in sleepservice\n    this.submitted = false;\n  }\n  /* Ionic doesn't allow bindings to static variables, so this getter can be used instead. */\n  get allSleepData() {\n    return SleepService.AllSleepData;\n  }\n  get allOvernightData() {\n    return SleepService.AllOvernightData;\n  }\n  onSubmit() {\n    console.log(this.bedTime);\n    console.log(this.wakeupTime);\n    console.log(typeof this.bedTime);\n    this.sleepService.logOvernightData(new OvernightSleepData(new Date(this.bedTime), new Date(this.wakeupTime)));\n    this.submitted = true;\n  }\n}\nOvernightPage.ɵfac = function OvernightPage_Factory(t) {\n  return new (t || OvernightPage)(i0.ɵɵdirectiveInject(i1.SleepService));\n};\nOvernightPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: OvernightPage,\n  selectors: [[\"app-overnight\"]],\n  decls: 14,\n  vars: 4,\n  consts: [[3, \"translucent\"], [3, \"fullscreen\"], [\"collapse\", \"condense\"], [\"size\", \"large\"], [\"color\", \"primary\", 1, \"ion-text-center\"], [4, \"ngIf\"], [1, \"time-column\"], [\"name\", \"bed-outline\", \"size\", \"large\", \"color\", \"secondary\", 1, \"ion-padding-vertical\"], [\"color\", \"secondary\", 1, \"ion-text-center\"], [\"id\", \"bedtime\"], [\"trigger\", \"bedtime\"], [\"name\", \"alarm\", \"size\", \"large\", \"color\", \"secondary\", 1, \"ion-padding-vertical\"], [1, \"ion-justify-content-center\"], [3, \"click\"], [\"presentation\", \"time\", \"displayFormat\", \"h:mm\", \"locale\", \"en-US\", 3, \"ngModel\", \"ngModelChange\"], [\"size\", \"large\", 1, \"ion-text-center\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function OvernightPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \" Sleep Tracker \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"ion-content\", 1)(5, \"ion-header\", 2)(6, \"ion-toolbar\")(7, \"ion-title\", 3);\n      i0.ɵɵtext(8, \"Sleep Tracker\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"ion-title\", 4)(10, \"h1\");\n      i0.ɵɵtext(11, \"Good morning!\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(12, OvernightPage_div_12_Template, 24, 0, \"div\", 5);\n      i0.ɵɵtemplate(13, OvernightPage_div_13_Template, 6, 1, \"div\", 5);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"translucent\", true);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"fullscreen\", true);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", !ctx.submitted);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.NgControlStatus, i3.NgModel, i4.IonButton, i4.IonCol, i4.IonContent, i4.IonDatetime, i4.IonHeader, i4.IonIcon, i4.IonItem, i4.IonLabel, i4.IonList, i4.IonRow, i4.IonTitle, i4.IonToolbar, i4.IonPopover, i4.SelectValueAccessor],\n  styles: [\"ion-datetime[_ngcontent-%COMP%] {\\n  --ion-background-color: #071836;\\n}\\n\\n[_ngcontent-%COMP%]::ng-def   ion-picker-column-internal[_ngcontent-%COMP%] {\\n  --background: var(--ion-background-color);\\n}\\n\\n#container[_ngcontent-%COMP%] {\\n  text-align: center;\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n  top: 50%;\\n  transform: translateY(-50%);\\n}\\n\\n#container[_ngcontent-%COMP%]   strong[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  line-height: 26px;\\n}\\n\\n#container[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  font-size: 16px;\\n  line-height: 22px;\\n  color: #8c8c8c;\\n  margin: 0;\\n}\\n\\n#container[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n  text-decoration: none;\\n}\\n\\n.time-column[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: start;\\n  align-items: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvb3Zlcm5pZ2h0L292ZXJuaWdodC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSwrQkFBQTtBQUNGOztBQUNBO0VBQ0UseUNBQUE7QUFFRjs7QUFDQTtFQUNFLGtCQUFBO0VBRUEsa0JBQUE7RUFDQSxPQUFBO0VBQ0EsUUFBQTtFQUNBLFFBQUE7RUFDQSwyQkFBQTtBQUNGOztBQUVBO0VBQ0UsZUFBQTtFQUNBLGlCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxlQUFBO0VBQ0EsaUJBQUE7RUFFQSxjQUFBO0VBRUEsU0FBQTtBQURGOztBQUlBO0VBQ0UscUJBQUE7QUFERjs7QUFJQTtFQUNFLGFBQUE7RUFDQSxzQkFBQTtFQUNBLHNCQUFBO0VBQ0EsbUJBQUE7QUFERiIsInNvdXJjZXNDb250ZW50IjpbImlvbi1kYXRldGltZSB7XHJcbiAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjogIzA3MTgzNjtcclxufVxyXG46Om5nLWRlZiBpb24tcGlja2VyLWNvbHVtbi1pbnRlcm5hbCB7XHJcbiAgLS1iYWNrZ3JvdW5kOiB2YXIoLS1pb24tYmFja2dyb3VuZC1jb2xvcik7XHJcbn1cclxuXHJcbiNjb250YWluZXIge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGxlZnQ6IDA7XHJcbiAgcmlnaHQ6IDA7XHJcbiAgdG9wOiA1MCU7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xyXG59XHJcblxyXG4jY29udGFpbmVyIHN0cm9uZyB7XHJcbiAgZm9udC1zaXplOiAyMHB4O1xyXG4gIGxpbmUtaGVpZ2h0OiAyNnB4O1xyXG59XHJcblxyXG4jY29udGFpbmVyIHAge1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxuICBsaW5lLWhlaWdodDogMjJweDtcclxuXHJcbiAgY29sb3I6ICM4YzhjOGM7XHJcblxyXG4gIG1hcmdpbjogMDtcclxufVxyXG5cclxuI2NvbnRhaW5lciBhIHtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbn1cclxuXHJcbi50aW1lLWNvbHVtbiB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGp1c3RpZnktY29udGVudDogc3RhcnQ7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["SleepService","OvernightSleepData","i0","OvernightPage","constructor","sleepService","ngOnInit","console","log","allSleepData","d","Date","wakeupTime","toLocaleString","timeZone","bedTime","submitted","AllSleepData","allOvernightData","AllOvernightData","onSubmit","logOvernightData","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\philt\\inf133\\sleep-tracker\\sleeptracker\\src\\app\\overnight\\overnight.page.ts","C:\\Users\\philt\\inf133\\sleep-tracker\\sleeptracker\\src\\app\\overnight\\overnight.page.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { SleepService } from '../services/sleep.service';\nimport { SleepData } from '../data/sleep-data';\nimport { OvernightSleepData } from '../data/overnight-sleep-data';\nimport { StanfordSleepinessData } from '../data/stanford-sleepiness-data';\n\n@Component({\n  selector: 'app-overnight',\n  templateUrl: 'overnight.page.html',\n  styleUrls: ['overnight.page.scss'],\n})\nexport class OvernightPage {\n\tsubmitted: boolean = false;\n\tbedTime: string = '';\n\twakeupTime: string = '';\n\n\t\n  constructor(public sleepService:SleepService) { }\n\n\tngOnInit() {\n\t\tconsole.log(this.allSleepData);\n    // set default wakeup time to current time\n\t\tvar d: Date = new Date();\n\t\tthis.wakeupTime = d.toLocaleString(\"en-US\", {timeZone: \"America/Los_Angeles\"});\n\n\t\t// set default bed time to 8 hours ago\n\t\t// d.setHours(d.getHours() - 8);\n\t\tthis.bedTime = d.toLocaleString(\"en-US\", {timeZone: \"America/Los_Angeles\"});\n\n\t\t// check if there is entry in sleepservice\n\t\tthis.submitted = false;\n\t}\n\n\t/* Ionic doesn't allow bindings to static variables, so this getter can be used instead. */\n\tget allSleepData() {\n\t\treturn SleepService.AllSleepData;\n\t}\n\n\tget allOvernightData() {\n\t\treturn SleepService.AllOvernightData;\n\t}\n\n\tonSubmit() {\n\t\tconsole.log(this.bedTime);\n\t\tconsole.log(this.wakeupTime);\n\t\tconsole.log(typeof this.bedTime);\n\t\tthis.sleepService.logOvernightData(new OvernightSleepData(new Date(this.bedTime), new Date(this.wakeupTime)));\n\n\t\tthis.submitted = true;\n\t}\n\n}\n","<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-title>\n      Sleep Tracker\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\">\n  <ion-header collapse=\"condense\">\n    <ion-toolbar>\n      <ion-title size=\"large\">Sleep Tracker</ion-title>\n    </ion-toolbar>\n  </ion-header>\n\n  <ion-title class=\"ion-text-center\" color=\"primary\">\n    <h1>Good morning!</h1>\n  </ion-title>\n\n  <div *ngIf=\"!submitted\">\n    <div>\n      <ion-col class=\"time-column\">\n        <ion-icon name=\"bed-outline\" size=\"large\" color=\"secondary\" class=\"ion-padding-vertical\"></ion-icon>\n        <ion-label color=\"secondary\" class=\"ion-text-center\">\n          <h2>What time did you sleep?</h2>\n        </ion-label>\n        <ion-button id=\"bedtime\">Select Time</ion-button>\n        <ion-popover trigger=\"bedtime\" >\n          <ng-template>\n            <ion-datetime presentation=\"time\" displayFormat=\"h:mm\" locale=\"en-US\" [(ngModel)]=\"bedTime\"></ion-datetime>\n          </ng-template>\n      </ion-popover>\n        <!-- <ion-datetime presentation=\"time\" displayFormat=\"h:mm\" locale=\"en-US\" [(ngModel)]=\"bedTime\"></ion-datetime> -->\n      </ion-col>\n\n      <ion-col class=\"time-column\">\n        <ion-icon name=\"alarm\" size=\"large\" color=\"secondary\" class=\"ion-padding-vertical\"></ion-icon>\n        <ion-label color=\"secondary\" class=\"ion-text-center\">\n          <h2>What time did you wake up?</h2>\n        </ion-label>\n        <ion-button id=\"bedtime\">Select Time</ion-button>\n        <ion-popover trigger=\"bedtime\" >\n          <ng-template>\n        <ion-datetime presentation=\"time\" displayFormat=\"h:mm\" locale=\"en-US\" [(ngModel)]=\"wakeupTime\"></ion-datetime>\n      </ng-template>\n      </ion-popover>\n        <!-- <ion-datetime presentation=\"time\" displayFormat=\"h:mm\" locale=\"en-US\" [(ngModel)]=\"wakeupTime\"></ion-datetime> -->\n      </ion-col>\n    </div>\n\n    <ion-item>\n      <ion-row class=\"ion-justify-content-center\">\n        <ion-button (click)=\"onSubmit()\">Submit</ion-button>\n      </ion-row>\n    </ion-item>\n    \n  </div>\n\n  <div *ngIf=\"submitted\">\n    <ion-item>\n      <ion-title size=\"large\" class=\"ion-text-center\">Recent Sleepiness Data</ion-title>\n    </ion-item>\n    \n\n    <ion-list>\n      <div *ngFor=\"let data of allOvernightData\">\n        <ion-item>\n          <p>{{data.summaryString()}}</p>\n          <p>{{data.dateString()}}</p>\n        </ion-item>\n      </div>\n    </ion-list>\n  </div>\n\n\n\n</ion-content>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}