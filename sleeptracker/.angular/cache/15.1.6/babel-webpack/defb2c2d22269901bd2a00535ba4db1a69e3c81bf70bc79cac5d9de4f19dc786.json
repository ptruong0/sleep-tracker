{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { SleepService } from '../services/sleep.service';\nimport { OvernightSleepData } from '../data/overnight-sleep-data';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/sleep.service\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction OvernightPage_div_9_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-datetime\", 16);\n    i0.ɵɵlistener(\"ngModelChange\", function OvernightPage_div_9_ng_template_10_Template_ion_datetime_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.bedTime = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.bedTime);\n  }\n}\nfunction OvernightPage_div_9_ng_template_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-datetime\", 16);\n    i0.ɵɵlistener(\"ngModelChange\", function OvernightPage_div_9_ng_template_19_Template_ion_datetime_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.wakeupTime = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.wakeupTime);\n  }\n}\nfunction OvernightPage_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\")(2, \"ion-col\", 6);\n    i0.ɵɵelement(3, \"ion-icon\", 7);\n    i0.ɵɵelementStart(4, \"ion-label\", 8)(5, \"h2\");\n    i0.ɵɵtext(6, \"What time did you sleep?\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"ion-button\", 9);\n    i0.ɵɵtext(8, \"Select Time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"ion-popover\", 10);\n    i0.ɵɵtemplate(10, OvernightPage_div_9_ng_template_10_Template, 1, 1, \"ng-template\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"ion-col\", 6);\n    i0.ɵɵelement(12, \"ion-icon\", 11);\n    i0.ɵɵelementStart(13, \"ion-label\", 8)(14, \"h2\");\n    i0.ɵɵtext(15, \"What time did you wake up?\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"ion-button\", 12);\n    i0.ɵɵtext(17, \"Select Time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"ion-popover\", 13);\n    i0.ɵɵtemplate(19, OvernightPage_div_9_ng_template_19_Template, 1, 1, \"ng-template\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelement(20, \"hr\");\n    i0.ɵɵelementStart(21, \"ion-row\", 14)(22, \"ion-button\", 15);\n    i0.ɵɵlistener(\"click\", function OvernightPage_div_9_Template_ion_button_click_22_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onSubmit());\n    });\n    i0.ɵɵtext(23, \"Submit\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction OvernightPage_div_10_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"ion-item\")(2, \"ion-row\")(3, \"ion-col\", 19)(4, \"ion-text\", 20)(5, \"p\", 21);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"ion-col\", 19)(8, \"ion-text\", 20)(9, \"p\", 21);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelement(11, \"ion-text\", 20)(12, \"ion-text\", 20);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const data_r11 = ctx.$implicit;\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(data_r11.summaryString());\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(data_r11.dateString());\n  }\n}\nfunction OvernightPage_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"ion-item\")(2, \"ion-title\", 17);\n    i0.ɵɵtext(3, \"Recent Sleepiness Data\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"ion-list\");\n    i0.ɵɵtemplate(5, OvernightPage_div_10_div_5_Template, 13, 2, \"div\", 18);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.allOvernightDataReverse);\n  }\n}\nexport class OvernightPage {\n  constructor(sleepService, alertController) {\n    this.sleepService = sleepService;\n    this.alertController = alertController;\n    this.submitted = false;\n    this.bedTime = '';\n    this.wakeupTime = '';\n  }\n  ngOnInit() {\n    console.log(this.allSleepData);\n    // set default wakeup time to current time\n    var d = new Date();\n    this.wakeupTime = d.toLocaleString(\"en-US\", {\n      timeZone: \"America/Los_Angeles\"\n    });\n    // set default bed time to 8 hours ago\n    // d.setHours(d.getHours() - 8);\n    this.bedTime = d.toLocaleString(\"en-US\", {\n      timeZone: \"America/Los_Angeles\"\n    });\n    // check if there is entry in sleepservice\n    this.submitted = false;\n  }\n  /* Ionic doesn't allow bindings to static variables, so this getter can be used instead. */\n  get allSleepData() {\n    return SleepService.AllSleepData;\n  }\n  get allOvernightDataReverse() {\n    return SleepService.AllOvernightData.reverse();\n  }\n  presentAlert() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const alert = yield this.alertController.create({\n        header: 'Alert',\n        message: 'Invalid time range of sleep',\n        buttons: [{\n          text: 'OK',\n          cssClass: 'alert-button'\n        }],\n        cssClass: 'alert'\n      });\n      yield alert.present();\n    });\n  }\n  onSubmit() {\n    if (new Date(this.wakeupTime).getTime() - new Date(this.bedTime).getTime() <= 0) {\n      this.presentAlert();\n      return;\n    }\n    this.sleepService.logOvernightData(new OvernightSleepData(new Date(this.bedTime), new Date(this.wakeupTime)));\n    this.submitted = true;\n  }\n}\nOvernightPage.ɵfac = function OvernightPage_Factory(t) {\n  return new (t || OvernightPage)(i0.ɵɵdirectiveInject(i1.SleepService), i0.ɵɵdirectiveInject(i2.AlertController));\n};\nOvernightPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: OvernightPage,\n  selectors: [[\"app-overnight\"]],\n  decls: 11,\n  vars: 4,\n  consts: [[3, \"translucent\"], [\"color\", \"primary\"], [3, \"fullscreen\"], [\"collapse\", \"condense\"], [\"size\", \"large\"], [4, \"ngIf\"], [1, \"time-column\"], [\"name\", \"bed-outline\", \"size\", \"large\", \"color\", \"secondary\", 1, \"ion-padding-vertical\"], [\"color\", \"secondary\", 1, \"ion-text-center\"], [\"id\", \"bedtime\", \"color\", \"secondary\"], [\"trigger\", \"bedtime\"], [\"name\", \"alarm\", \"size\", \"large\", \"color\", \"secondary\", 1, \"ion-padding-vertical\"], [\"id\", \"wakeuptime\", \"color\", \"secondary\"], [\"trigger\", \"wakeuptime\"], [1, \"ion-justify-content-center\"], [3, \"click\"], [\"presentation\", \"time\", \"displayFormat\", \"h:mm\", \"locale\", \"en-US\", \"color\", \"tertiary\", 3, \"ngModel\", \"ngModelChange\"], [\"size\", \"large\", \"color\", \"primary\", 1, \"ion-text-center\"], [4, \"ngFor\", \"ngForOf\"], [\"size\", \"6\", 1, \"half-col\"], [\"color\", \"secondary\"], [1, \"ion-padding-horizontal\"]],\n  template: function OvernightPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-title\", 1);\n      i0.ɵɵtext(3, \" Sleep Tracker \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"ion-content\", 2)(5, \"ion-header\", 3)(6, \"ion-toolbar\")(7, \"ion-title\", 4);\n      i0.ɵɵtext(8, \"Sleep Tracker\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(9, OvernightPage_div_9_Template, 24, 0, \"div\", 5);\n      i0.ɵɵtemplate(10, OvernightPage_div_10_Template, 6, 1, \"div\", 5);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"translucent\", true);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"fullscreen\", true);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", !ctx.submitted);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.NgControlStatus, i4.NgModel, i2.IonButton, i2.IonCol, i2.IonContent, i2.IonDatetime, i2.IonHeader, i2.IonIcon, i2.IonItem, i2.IonLabel, i2.IonList, i2.IonRow, i2.IonText, i2.IonTitle, i2.IonToolbar, i2.IonPopover, i2.SelectValueAccessor],\n  styles: [\"ion-datetime[_ngcontent-%COMP%] {\\n  --ion-background-color: #071836;\\n}\\n\\n[_ngcontent-%COMP%]::ng-def   ion-picker-column-internal[_ngcontent-%COMP%] {\\n  --background: var(--ion-background-color);\\n}\\n\\n#container[_ngcontent-%COMP%] {\\n  text-align: center;\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n  top: 50%;\\n  transform: translateY(-50%);\\n}\\n\\n#container[_ngcontent-%COMP%]   strong[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  line-height: 26px;\\n}\\n\\n#container[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  font-size: 16px;\\n  line-height: 22px;\\n  color: #8c8c8c;\\n  margin: 0;\\n}\\n\\n#container[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n  text-decoration: none;\\n}\\n\\n.time-column[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: start;\\n  align-items: center;\\n}\\n\\n.half-col[_ngcontent-%COMP%] {\\n  width: 50vw !important;\\n}\\n\\n.alert-btn[_ngcontent-%COMP%] {\\n  background-color: #071836 !important;\\n  color: yellow !important;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvb3Zlcm5pZ2h0L292ZXJuaWdodC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSwrQkFBQTtBQUNGOztBQUNBO0VBQ0UseUNBQUE7QUFFRjs7QUFDQTtFQUNFLGtCQUFBO0VBRUEsa0JBQUE7RUFDQSxPQUFBO0VBQ0EsUUFBQTtFQUNBLFFBQUE7RUFDQSwyQkFBQTtBQUNGOztBQUVBO0VBQ0UsZUFBQTtFQUNBLGlCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxlQUFBO0VBQ0EsaUJBQUE7RUFFQSxjQUFBO0VBRUEsU0FBQTtBQURGOztBQUlBO0VBQ0UscUJBQUE7QUFERjs7QUFJQTtFQUNFLGFBQUE7RUFDQSxzQkFBQTtFQUNBLHNCQUFBO0VBQ0EsbUJBQUE7QUFERjs7QUFJQTtFQUNFLHNCQUFBO0FBREY7O0FBSUE7RUFDRSxvQ0FBQTtFQUNBLHdCQUFBO0FBREYiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tZGF0ZXRpbWUge1xyXG4gIC0taW9uLWJhY2tncm91bmQtY29sb3I6ICMwNzE4MzY7XHJcbn1cclxuOjpuZy1kZWYgaW9uLXBpY2tlci1jb2x1bW4taW50ZXJuYWwge1xyXG4gIC0tYmFja2dyb3VuZDogdmFyKC0taW9uLWJhY2tncm91bmQtY29sb3IpO1xyXG59XHJcblxyXG4jY29udGFpbmVyIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblxyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBsZWZ0OiAwO1xyXG4gIHJpZ2h0OiAwO1xyXG4gIHRvcDogNTAlO1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcclxufVxyXG5cclxuI2NvbnRhaW5lciBzdHJvbmcge1xyXG4gIGZvbnQtc2l6ZTogMjBweDtcclxuICBsaW5lLWhlaWdodDogMjZweDtcclxufVxyXG5cclxuI2NvbnRhaW5lciBwIHtcclxuICBmb250LXNpemU6IDE2cHg7XHJcbiAgbGluZS1oZWlnaHQ6IDIycHg7XHJcblxyXG4gIGNvbG9yOiAjOGM4YzhjO1xyXG5cclxuICBtYXJnaW46IDA7XHJcbn1cclxuXHJcbiNjb250YWluZXIgYSB7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG59XHJcblxyXG4udGltZS1jb2x1bW4ge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHN0YXJ0O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5oYWxmLWNvbCB7XHJcbiAgd2lkdGg6IDUwdnchaW1wb3J0YW50O1xyXG59XHJcblxyXG4uYWxlcnQtYnRuIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDcxODM2IWltcG9ydGFudDtcclxuICBjb2xvcjogeWVsbG93IWltcG9ydGFudDtcclxufVxyXG4vLyBpb24tcG9wb3ZlciB7XHJcbi8vICAgcG9zaXRpb246IGZpeGVkICFpbXBvcnRhbnQ7XHJcbi8vICAgbGVmdDogLTE1JSAhaW1wb3J0YW50O1xyXG4vLyAgIGhlaWdodDogMjUwcHggIWltcG9ydGFudDtcclxuLy8gICB3aWR0aDogMjAwcHggIWltcG9ydGFudDtcclxuLy8gfVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["SleepService","OvernightSleepData","i0","OvernightPage","constructor","sleepService","alertController","ngOnInit","console","log","allSleepData","d","Date","wakeupTime","toLocaleString","timeZone","bedTime","submitted","AllSleepData","allOvernightDataReverse","AllOvernightData","reverse","presentAlert","alert","create","header","message","buttons","text","cssClass","present","onSubmit","getTime","logOvernightData","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\philt\\inf133\\sleep-tracker\\sleeptracker\\src\\app\\overnight\\overnight.page.ts","C:\\Users\\philt\\inf133\\sleep-tracker\\sleeptracker\\src\\app\\overnight\\overnight.page.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { SleepService } from '../services/sleep.service';\nimport { SleepData } from '../data/sleep-data';\nimport { OvernightSleepData } from '../data/overnight-sleep-data';\nimport { StanfordSleepinessData } from '../data/stanford-sleepiness-data';\nimport { AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-overnight',\n  templateUrl: 'overnight.page.html',\n  styleUrls: ['overnight.page.scss'],\n})\nexport class OvernightPage {\n\tsubmitted: boolean = false;\n\tbedTime: string = '';\n\twakeupTime: string = '';\n\n\t\n  constructor(public sleepService:SleepService, private alertController: AlertController) { }\n\n\tngOnInit() {\n\t\tconsole.log(this.allSleepData);\n    // set default wakeup time to current time\n\t\tvar d: Date = new Date();\n\t\tthis.wakeupTime = d.toLocaleString(\"en-US\", {timeZone: \"America/Los_Angeles\"});\n\n\t\t// set default bed time to 8 hours ago\n\t\t// d.setHours(d.getHours() - 8);\n\t\tthis.bedTime = d.toLocaleString(\"en-US\", {timeZone: \"America/Los_Angeles\"});\n\n\t\t// check if there is entry in sleepservice\n\t\tthis.submitted = false;\n\t}\n\n\t/* Ionic doesn't allow bindings to static variables, so this getter can be used instead. */\n\tget allSleepData() {\n\t\treturn SleepService.AllSleepData;\n\t}\n\n\tget allOvernightDataReverse() {\n\t\treturn SleepService.AllOvernightData.reverse();\n\t}\n\n  async presentAlert() {\n    const alert = await this.alertController.create({\n      header: 'Alert',\n      message: 'Invalid time range of sleep',\n      buttons: [\n      {\n        text: 'OK',\n        cssClass: 'alert-button',\n      },],\n      cssClass: 'alert'\n    });\n\n    await alert.present();\n  }\n\n\tonSubmit() {\n    if (new Date(this.wakeupTime).getTime() - new Date(this.bedTime).getTime() <= 0) {\n      this.presentAlert();\n      return;\n    }\n\t\tthis.sleepService.logOvernightData(new OvernightSleepData(new Date(this.bedTime), new Date(this.wakeupTime)));\n\n\t\tthis.submitted = true;\n\t}\n\n}\n","<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-title color=\"primary\">\n      Sleep Tracker\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\">\n  <ion-header collapse=\"condense\">\n    <ion-toolbar>\n      <ion-title size=\"large\">Sleep Tracker</ion-title>\n    </ion-toolbar>\n  </ion-header>\n\n  <div *ngIf=\"!submitted\">\n    <div>\n      <ion-col class=\"time-column\">\n        <ion-icon name=\"bed-outline\" size=\"large\" color=\"secondary\" class=\"ion-padding-vertical\"></ion-icon>\n        <ion-label color=\"secondary\" class=\"ion-text-center\">\n          <h2>What time did you sleep?</h2>\n        </ion-label>\n        <ion-button id=\"bedtime\" color=\"secondary\">Select Time</ion-button>\n        <ion-popover trigger=\"bedtime\">\n          <ng-template>\n            <ion-datetime presentation=\"time\" displayFormat=\"h:mm\" locale=\"en-US\" [(ngModel)]=\"bedTime\"\n              color=\"tertiary\"></ion-datetime>\n          </ng-template>\n        </ion-popover>\n        <!-- <ion-datetime presentation=\"time\" displayFormat=\"h:mm\" locale=\"en-US\" [(ngModel)]=\"bedTime\"></ion-datetime> -->\n      </ion-col>\n\n      <ion-col class=\"time-column\">\n        <ion-icon name=\"alarm\" size=\"large\" color=\"secondary\" class=\"ion-padding-vertical\"></ion-icon>\n        <ion-label color=\"secondary\" class=\"ion-text-center\">\n          <h2>What time did you wake up?</h2>\n        </ion-label>\n        <ion-button id=\"wakeuptime\" color=\"secondary\">Select Time</ion-button>\n        <ion-popover trigger=\"wakeuptime\">\n          <ng-template>\n            <ion-datetime presentation=\"time\" displayFormat=\"h:mm\" locale=\"en-US\" [(ngModel)]=\"wakeupTime\"\n              color=\"tertiary\"></ion-datetime>\n          </ng-template>\n        </ion-popover>\n        <!-- <ion-datetime presentation=\"time\" displayFormat=\"h:mm\" locale=\"en-US\" [(ngModel)]=\"wakeupTime\"></ion-datetime> -->\n      </ion-col>\n    </div>\n\n    <hr>\n    <ion-row class=\"ion-justify-content-center\">\n      <ion-button (click)=\"onSubmit()\">Submit</ion-button>\n    </ion-row>\n  </div>\n\n  <div *ngIf=\"submitted\">\n    <ion-item>\n      <ion-title size=\"large\" color=\"primary\" class=\"ion-text-center\">Recent Sleepiness Data</ion-title>\n    </ion-item>\n\n\n    <ion-list>\n      <div *ngFor=\"let data of allOvernightDataReverse\">\n        <ion-item>\n          <ion-row >\n            <ion-col size=\"6\" class=\"half-col\">\n              <ion-text color=\"secondary\">\n                <p class=\"ion-padding-horizontal\">{{data.summaryString()}}</p>\n              </ion-text>\n            </ion-col>\n            <ion-col size=\"6\" class=\"half-col\">\n              <ion-text color=\"secondary\">\n                <p class=\"ion-padding-horizontal\">{{data.dateString()}}</p>\n              </ion-text>\n            </ion-col>\n          </ion-row>\n          <ion-text color=\"secondary\">\n          </ion-text>\n          <ion-text color=\"secondary\">\n          </ion-text>\n        </ion-item>\n      </div>\n    </ion-list>\n  </div>\n\n\n</ion-content>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}