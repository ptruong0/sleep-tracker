{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { OvernightSleepData } from '../data/overnight-sleep-data';\nimport { StanfordSleepinessData } from '../data/stanford-sleepiness-data';\nimport { Preferences } from '@capacitor/preferences';\nimport * as i0 from \"@angular/core\";\nexport class SleepService {\n  constructor() {\n    // if (SleepService.LoadDefaultData) {\n    // \tthis.addDefaultData();\n    // \tSleepService.LoadDefaultData = false;\n    // }\n    // this.loadOvernightData()\n    // \t.then((data) => {\n    // \t\tJSON.parse(data.value || '[]').forEach((item: {}) => {\n    // \t\t\tconsole.log(item);\n    // \t\t\tthis.logOvernightData(OvernightSleepData.fromJson(item))\n    // \t\t});\n    // \t\t// SleepService.AllOvernightData.push(...JSON.parse(data.value || '[]'));\n    // \t})\n    // .then(\n    // \t);\n    // Promise<GetResult> load2 = this.loadSleepinessData()\n    // \t.then((data) => {\n    // \t\tJSON.parse(data.value || '[]').forEach((item: {}) => {\n    // \t\t\tconsole.log(item);\n    // \t\t\tthis.logSleepinessData(StanfordSleepinessData.fromJson(item));\n    // \t\t});\n    // \t\treturn data;\n    // \t\t// SleepService.AllSleepinessData.push(...JSON.parse(data.value || '[]'));\n    // \t})\n    // this.loadData()\n    // \t.then(() => {\n    // \t\tif (SleepService.AllSleepData.length == 0 && SleepService.LoadDefaultData) {\n    // \t\t\tthis.addDefaultData();\n    // \t\t\tSleepService.LoadDefaultData = false;\n    // \t\t}\n    // \t}\n    // \t)\n    Preferences.set({\n      key: 'overnightData',\n      value: JSON.stringify([])\n    });\n  }\n  loadData() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield Preferences.get({\n        key: 'overnightData'\n      }).then(data => {\n        JSON.parse(data.value || '[]').forEach(item => {\n          console.log(item);\n          this.logOvernightData(OvernightSleepData.fromJson(item));\n        });\n        // SleepService.AllOvernightData.push(...JSON.parse(data.value || '[]'));\n      });\n\n      yield Preferences.get({\n        key: 'sleepinessData'\n      }).then(data => {\n        JSON.parse(data.value || '[]').forEach(item => {\n          console.log(item);\n          this.logSleepinessData(StanfordSleepinessData.fromJson(item));\n        });\n        return data;\n        // SleepService.AllSleepinessData.push(...JSON.parse(data.value || '[]'));\n      });\n    });\n  }\n\n  loadOvernightData() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return yield Preferences.get({\n        key: 'overnightData'\n      });\n    });\n  }\n  loadSleepinessData() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return yield Preferences.get({\n        key: 'sleepinessData'\n      });\n    });\n  }\n  addDefaultData() {\n    this.logOvernightData(new OvernightSleepData(new Date('February 18, 2021 01:03:00'), new Date('February 18, 2021 09:25:00')));\n    this.logSleepinessData(new StanfordSleepinessData(4, new Date('February 19, 2021 14:38:00')));\n    this.logOvernightData(new OvernightSleepData(new Date('February 20, 2021 23:11:00'), new Date('February 21, 2021 08:03:00')));\n  }\n  logOvernightData(sleepData) {\n    SleepService.AllSleepData.push(sleepData);\n    SleepService.AllOvernightData.push(sleepData);\n    this.saveOvernightData();\n  }\n  logSleepinessData(sleepData) {\n    SleepService.AllSleepData.push(sleepData);\n    SleepService.AllSleepinessData.push(sleepData);\n    this.saveSleepinessData();\n  }\n  saveOvernightData() {\n    Preferences.set({\n      key: 'overnightData',\n      value: JSON.stringify(SleepService.AllOvernightData)\n    });\n  }\n  saveSleepinessData() {\n    Preferences.set({\n      key: 'sleepinessData',\n      value: JSON.stringify(SleepService.AllSleepinessData)\n    });\n  }\n}\nSleepService.LoadDefaultData = true;\nSleepService.AllSleepData = [];\nSleepService.AllOvernightData = [];\nSleepService.AllSleepinessData = [];\nSleepService.ɵfac = function SleepService_Factory(t) {\n  return new (t || SleepService)();\n};\nSleepService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SleepService,\n  factory: SleepService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["OvernightSleepData","StanfordSleepinessData","Preferences","SleepService","constructor","set","key","value","JSON","stringify","loadData","get","then","data","parse","forEach","item","console","log","logOvernightData","fromJson","logSleepinessData","loadOvernightData","loadSleepinessData","addDefaultData","Date","sleepData","AllSleepData","push","AllOvernightData","saveOvernightData","AllSleepinessData","saveSleepinessData","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\philt\\inf133\\sleep-tracker\\sleeptracker\\src\\app\\services\\sleep.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { SleepData } from '../data/sleep-data';\nimport { OvernightSleepData } from '../data/overnight-sleep-data';\nimport { StanfordSleepinessData } from '../data/stanford-sleepiness-data';\nimport { Preferences } from '@capacitor/preferences';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class SleepService {\n\tprivate static LoadDefaultData: boolean = true;\n\tpublic static AllSleepData: SleepData[] = [];\n\tpublic static AllOvernightData: OvernightSleepData[] = [];\n\tpublic static AllSleepinessData: StanfordSleepinessData[] = [];\n\n\tconstructor() {\n\t\t// if (SleepService.LoadDefaultData) {\n\t\t// \tthis.addDefaultData();\n\t\t// \tSleepService.LoadDefaultData = false;\n\t\t// }\n\n\t\t// this.loadOvernightData()\n\t\t// \t.then((data) => {\n\t\t// \t\tJSON.parse(data.value || '[]').forEach((item: {}) => {\n\t\t// \t\t\tconsole.log(item);\n\t\t// \t\t\tthis.logOvernightData(OvernightSleepData.fromJson(item))\n\t\t// \t\t});\n\t\t// \t\t// SleepService.AllOvernightData.push(...JSON.parse(data.value || '[]'));\n\t\t// \t})\n\t\t// .then(\n\n\t\t// \t);\n\t\t// Promise<GetResult> load2 = this.loadSleepinessData()\n\t\t// \t.then((data) => {\n\t\t// \t\tJSON.parse(data.value || '[]').forEach((item: {}) => {\n\t\t// \t\t\tconsole.log(item);\n\t\t// \t\t\tthis.logSleepinessData(StanfordSleepinessData.fromJson(item));\n\t\t// \t\t});\n\t\t// \t\treturn data;\n\t\t// \t\t// SleepService.AllSleepinessData.push(...JSON.parse(data.value || '[]'));\n\t\t// \t})\n\t\t\n\t\t// this.loadData()\n\t\t// \t.then(() => {\n\t\t// \t\tif (SleepService.AllSleepData.length == 0 && SleepService.LoadDefaultData) {\n\t\t// \t\t\tthis.addDefaultData();\n\t\t// \t\t\tSleepService.LoadDefaultData = false;\n\t\t// \t\t}\n\t\t// \t}\n\t\t// \t)\n\t\tPreferences.set({ key: 'overnightData', value: JSON.stringify([]) });\n\n\t}\n\n\tprivate async loadData() {\n\t\tawait Preferences.get({ key: 'overnightData' })\n\t\t.then((data) => {\n\t\t\tJSON.parse(data.value || '[]').forEach((item: {}) => {\n\t\t\t\tconsole.log(item);\n\t\t\t\tthis.logOvernightData(OvernightSleepData.fromJson(item))\n\t\t\t});\n\t\t\t// SleepService.AllOvernightData.push(...JSON.parse(data.value || '[]'));\n\t\t});\n\n\t\tawait Preferences.get({ key: 'sleepinessData' })\n\t\t.then((data) => {\n\t\t\tJSON.parse(data.value || '[]').forEach((item: {}) => {\n\t\t\t\tconsole.log(item);\n\t\t\t\tthis.logSleepinessData(StanfordSleepinessData.fromJson(item));\n\t\t\t});\n\t\t\treturn data;\n\t\t\t// SleepService.AllSleepinessData.push(...JSON.parse(data.value || '[]'));\n\t\t});\n\t}\n\n\tprivate async loadOvernightData() {\n\t\treturn await Preferences.get({ key: 'overnightData' });\n\t}\n\tprivate async loadSleepinessData() {\n\t\treturn await Preferences.get({ key: 'sleepinessData' });\n\t}\n\n\n\tprivate addDefaultData() {\n\t\tthis.logOvernightData(new OvernightSleepData(new Date('February 18, 2021 01:03:00'), new Date('February 18, 2021 09:25:00')));\n\t\tthis.logSleepinessData(new StanfordSleepinessData(4, new Date('February 19, 2021 14:38:00')));\n\t\tthis.logOvernightData(new OvernightSleepData(new Date('February 20, 2021 23:11:00'), new Date('February 21, 2021 08:03:00')));\n\t}\n\n\tpublic logOvernightData(sleepData: OvernightSleepData) {\n\t\tSleepService.AllSleepData.push(sleepData);\n\t\tSleepService.AllOvernightData.push(sleepData);\n\t\tthis.saveOvernightData();\n\t}\n\n\tpublic logSleepinessData(sleepData: StanfordSleepinessData) {\n\t\tSleepService.AllSleepData.push(sleepData);\n\t\tSleepService.AllSleepinessData.push(sleepData);\n\t\tthis.saveSleepinessData();\n\t}\n\n\tprivate saveOvernightData() {\n\t\tPreferences.set({ key: 'overnightData', value: JSON.stringify(SleepService.AllOvernightData) });\n\t}\n\n\tprivate saveSleepinessData() {\n\t\tPreferences.set({ key: 'sleepinessData', value: JSON.stringify(SleepService.AllSleepinessData) });\n\n\t}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}