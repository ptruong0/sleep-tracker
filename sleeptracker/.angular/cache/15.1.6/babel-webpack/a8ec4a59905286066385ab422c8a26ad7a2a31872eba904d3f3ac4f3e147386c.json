{"ast":null,"code":"import { SleepService } from '../services/sleep.service';\nimport { StanfordSleepinessData } from '../data/stanford-sleepiness-data';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/sleep.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@ionic/angular\";\nfunction DaytimePage_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"ion-item\")(2, \"ion-row\", 15)(3, \"ion-col\")(4, \"ion-text\", 16)(5, \"h1\", 2);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"ion-col\", 17)(8, \"ion-text\", 7)(9, \"p\", 18);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"ion-text\", 7)(12, \"p\", 18);\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const data_r1 = ctx.$implicit;\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(data_r1.summaryString()[0]);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(data_r1.summaryString().slice(3));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(data_r1.dateString());\n  }\n}\nexport class DaytimePage {\n  constructor(sleepService) {\n    this.sleepService = sleepService;\n    this.sliderValue = 1; // default value\n    this.sliderDescription = StanfordSleepinessData.ScaleValues[this.sliderValue];\n  }\n  ngOnInit() {}\n  get allSleepinessData() {\n    return SleepService.AllSleepinessData;\n  }\n  onSliderChange() {\n    console.log(this.sliderValue);\n    this.sliderDescription = StanfordSleepinessData.ScaleValues[this.sliderValue];\n  }\n  onSubmit() {\n    this.sleepService.logSleepinessData(new StanfordSleepinessData(this.sliderValue));\n  }\n}\nDaytimePage.ɵfac = function DaytimePage_Factory(t) {\n  return new (t || DaytimePage)(i0.ɵɵdirectiveInject(i1.SleepService));\n};\nDaytimePage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DaytimePage,\n  selectors: [[\"app-daytime\"]],\n  decls: 32,\n  vars: 4,\n  consts: [[\"color\", \"primary\"], [\"size\", \"large\", \"color\", \"primary\", 1, \"ion-text-center\"], [1, \"ion-padding-horizontal\"], [\"min\", \"1\", \"max\", \"7\", 3, \"ngModel\", \"ionChange\", \"ngModelChange\"], [\"slot\", \"start\", \"name\", \"flash\", \"color\", \"secondary\"], [\"slot\", \"end\", \"name\", \"cloudy-night\", \"color\", \"secondary\"], [1, \"ion-justify-content-between\"], [\"color\", \"secondary\"], [\"color\", \"secondary\", 1, \"ion-text-center\"], [\"color\", \"primary\", 1, \"ion-text-center\"], [1, \"ion-margin-horizontal\"], [1, \"ion-justify-content-center\"], [3, \"click\"], [1, \"divider\"], [4, \"ngFor\", \"ngForOf\"], [1, \"data-row\"], [\"size\", \"2\", \"color\", \"secondary\"], [\"size\", \"10\", 1, \"ion-padding-horizontal\", \"col\"], [1, \"small-text\"]],\n  template: function DaytimePage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\", 0);\n      i0.ɵɵtext(3, \"Sleep Tracker\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"ion-content\")(5, \"ion-item\")(6, \"ion-title\", 1);\n      i0.ɵɵtext(7, \"Record sleepiness\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"ion-range\", 3);\n      i0.ɵɵlistener(\"ionChange\", function DaytimePage_Template_ion_range_ionChange_9_listener() {\n        return ctx.onSliderChange();\n      })(\"ngModelChange\", function DaytimePage_Template_ion_range_ngModelChange_9_listener($event) {\n        return ctx.sliderValue = $event;\n      });\n      i0.ɵɵelement(10, \"ion-icon\", 4)(11, \"ion-icon\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"ion-row\", 6)(13, \"ion-text\", 7);\n      i0.ɵɵtext(14, \" Awake \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"ion-text\", 7);\n      i0.ɵɵtext(16, \" Sleepy \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(17, \"ion-text\", 8)(18, \"p\");\n      i0.ɵɵtext(19);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"ion-text\", 9)(21, \"p\", 10);\n      i0.ɵɵtext(22);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"ion-row\", 11)(24, \"ion-button\", 12);\n      i0.ɵɵlistener(\"click\", function DaytimePage_Template_ion_button_click_24_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(25, \"Submit\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(26, \"hr\", 13);\n      i0.ɵɵelementStart(27, \"ion-item\")(28, \"ion-title\", 1);\n      i0.ɵɵtext(29, \"Recent Sleepiness Data\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(30, \"ion-list\");\n      i0.ɵɵtemplate(31, DaytimePage_div_31_Template, 14, 3, \"div\", 14);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngModel\", ctx.sliderValue);\n      i0.ɵɵadvance(10);\n      i0.ɵɵtextInterpolate1(\"Level \", ctx.sliderValue, \":\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.sliderDescription);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", ctx.allSleepinessData);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.NgControlStatus, i3.NgModel, i4.IonButton, i4.IonCol, i4.IonContent, i4.IonHeader, i4.IonIcon, i4.IonItem, i4.IonList, i4.IonRange, i4.IonRow, i4.IonText, i4.IonTitle, i4.IonToolbar, i4.SelectValueAccessor],\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 541:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/sass-loader/dist/cjs.js):\\\\nSassError: expected \\\\\\\";\\\\\\\".\\\\n   \\u2577\\\\n24 \\u2502   margin-top: 1rem;\\\\r\\\\n   \\u2502             ^\\\\n   \\u2575\\\\n  src\\\\\\\\app\\\\\\\\daytime\\\\\\\\daytime.page.scss 24:13  root stylesheet\\\");\\n\\n })\\n\\n \\t});\\n\\n \\t\\n \\t// startup\\n \\t// Load entry module and return exports\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n \\tvar __webpack_exports__ = {};\\n \\t__webpack_modules__[541]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,YAAY,QAAQ,2BAA2B;AAGxD,SAASC,sBAAsB,QAAQ,kCAAkC;;;;;;;;ICyCrEC,2BAA4C;IAKCA,YAA2B;IAAAA,iBAAK;IAGvEA,mCAAsD;IAE5BA,aAAiC;IAAAA,iBAAI;IAE7DA,oCAA4B;IACJA,aAAqB;IAAAA,iBAAI;;;;IARZA,eAA2B;IAA3BA,gDAA2B;IAKxCA,eAAiC;IAAjCA,sDAAiC;IAGjCA,eAAqB;IAArBA,0CAAqB;;;AD/CzD,OAAM,MAAOC,WAAW;EAItBC,YAAmBC,YAAyB;IAAzB,iBAAY,GAAZA,YAAY;IAC7B,IAAI,CAACC,WAAW,GAAG,CAAC,CAAC,CAAC;IACxB,IAAI,CAACC,iBAAiB,GAAGN,sBAAsB,CAACO,WAAW,CAAC,IAAI,CAACF,WAAW,CAAC;EAC5E;EAEDG,QAAQ,IACR;EAGA,IAAIC,iBAAiB;IACrB,OAAOV,YAAY,CAACW,iBAAiB;EACtC;EAECC,cAAc;IACdC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,WAAW,CAAC;IAC7B,IAAI,CAACC,iBAAiB,GAAGN,sBAAsB,CAACO,WAAW,CAAC,IAAI,CAACF,WAAW,CAAC;EAC9E;EAECS,QAAQ;IACN,IAAI,CAACV,YAAY,CAACW,iBAAiB,CAAC,IAAIf,sBAAsB,CAAC,IAAI,CAACK,WAAW,CAAC,CAAC;EACnF;;;mBAxBWH,WAAW;AAAA;;QAAXA,WAAW;EAAAc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXxBnB,kCAAY;MAEmBA,6BAAa;MAAAA,iBAAY;MAIxDA,mCAAa;MAEuDA,iCAAiB;MAAAA,iBAAY;MAG/FA,8BAAoC;MACPA;QAAA,OAAaoB,oBAAgB;MAAA,EAAC;QAAA;MAAA;MACvDpB,+BAAiE;MAEnEA,iBAAY;MACZA,mCAA6C;MAEzCA,wBACF;MAAAA,iBAAW;MACXA,oCAA4B;MAC1BA,yBACF;MAAAA,iBAAW;MAMfA,oCAAoD;MAC/CA,aAAsB;MAAAA,iBAAI;MAE/BA,oCAAkD;MACfA,aAAqB;MAAAA,iBAAI;MAE5DA,oCAA4C;MAC9BA;QAAA,OAASoB,cAAU;MAAA,EAAC;MAACpB,uBAAM;MAAAA,iBAAa;MAGtDA,0BAAsB;MAEtBA,iCAAU;MACwDA,uCAAsB;MAAAA,iBAAY;MAGpGA,iCAAU;MACRA,gEAkBM;MACRA,iBAAW;;;MApDiDA,eAAyB;MAAzBA,yCAAyB;MAiBhFA,gBAAsB;MAAtBA,qDAAsB;MAGQA,eAAqB;MAArBA,2CAAqB;MAahCA,eAAoB;MAApBA,+CAAoB","names":["SleepService","StanfordSleepinessData","i0","DaytimePage","constructor","sleepService","sliderValue","sliderDescription","ScaleValues","ngOnInit","allSleepinessData","AllSleepinessData","onSliderChange","console","log","onSubmit","logSleepinessData","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\philt\\inf133\\sleep-tracker\\sleeptracker\\src\\app\\daytime\\daytime.page.ts","C:\\Users\\philt\\inf133\\sleep-tracker\\sleeptracker\\src\\app\\daytime\\daytime.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { SleepService } from '../services/sleep.service';\nimport { SleepData } from '../data/sleep-data';\nimport { OvernightSleepData } from '../data/overnight-sleep-data';\nimport { StanfordSleepinessData } from '../data/stanford-sleepiness-data';\n\n@Component({\n  selector: 'app-daytime',\n  templateUrl: './daytime.page.html',\n  styleUrls: ['./daytime.page.scss'],\n})\nexport class DaytimePage implements OnInit {\n  sliderValue: number;\n\tsliderDescription: string | undefined;\n\n  constructor(public sleepService:SleepService) {\n    this.sliderValue = 1;\t// default value\n\t\tthis.sliderDescription = StanfordSleepinessData.ScaleValues[this.sliderValue];\n   }\n\n  ngOnInit() {\n  }\n\n\n  get allSleepinessData() {\n\t\treturn SleepService.AllSleepinessData;\n\t}\n\n  onSliderChange() {\n\t\tconsole.log(this.sliderValue);\n\t\tthis.sliderDescription = StanfordSleepinessData.ScaleValues[this.sliderValue];\n\t}\n\n  onSubmit() {\n    this.sleepService.logSleepinessData(new StanfordSleepinessData(this.sliderValue));\n  }\n}\n","<ion-header>\n  <ion-toolbar>\n    <ion-title color=\"primary\">Sleep Tracker</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-item>\n    <ion-title size=\"large\" class=\"ion-text-center\" color=\"primary\">Record sleepiness</ion-title>\n  </ion-item>\n\n  <div class=\"ion-padding-horizontal\">\n    <ion-range min=\"1\" max=\"7\" (ionChange)=\"onSliderChange()\" [(ngModel)]=\"sliderValue\">\n      <ion-icon slot=\"start\" name=\"flash\" color=\"secondary\"></ion-icon>\n      <ion-icon slot=\"end\" name=\"cloudy-night\" color=\"secondary\"></ion-icon>\n    </ion-range>\n    <ion-row class=\"ion-justify-content-between\">\n      <ion-text color=\"secondary\">\n        Awake\n      </ion-text>\n      <ion-text color=\"secondary\">\n        Sleepy\n      </ion-text>\n\n    </ion-row>\n  </div>\n  \n\n  <ion-text class=\"ion-text-center\" color=\"secondary\">\n    <p>Level {{sliderValue}}:</p>\n  </ion-text>\n  <ion-text color=\"primary\" class=\"ion-text-center\">\n    <p class=\"ion-margin-horizontal\">{{sliderDescription}}</p>\n  </ion-text>\n  <ion-row class=\"ion-justify-content-center\">\n    <ion-button (click)=\"onSubmit()\">Submit</ion-button>\n  </ion-row>\n\n  <hr class=\"divider\" />\n\n  <ion-item>\n    <ion-title size=\"large\" class=\"ion-text-center\" color=\"primary\">Recent Sleepiness Data</ion-title>\n  </ion-item>\n\n  <ion-list>\n    <div *ngFor=\"let data of allSleepinessData\">\n      <ion-item>\n        <ion-row class=\"data-row\">\n          <ion-col>\n            <ion-text size=\"2\" color=\"secondary\">\n              <h1 class=\"ion-padding-horizontal\">{{data.summaryString()[0]}}</h1>\n            </ion-text>\n          </ion-col>\n          <ion-col size=\"10\" class=\"ion-padding-horizontal col\">\n            <ion-text color=\"secondary\">\n              <p class=\"small-text\">{{data.summaryString().slice(3)}}</p>\n            </ion-text>\n            <ion-text color=\"secondary\">\n              <p class=\"small-text\">{{data.dateString()}}</p>\n            </ion-text>\n          </ion-col>\n        </ion-row>\n      </ion-item>\n    </div>\n  </ion-list>\n</ion-content>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}