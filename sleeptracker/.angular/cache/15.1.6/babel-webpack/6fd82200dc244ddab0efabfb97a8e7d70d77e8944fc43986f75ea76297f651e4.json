{"ast":null,"code":"import { SleepService } from '../services/sleep.service';\nimport { OvernightSleepData } from '../data/overnight-sleep-data';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/sleep.service\";\nimport * as i2 from \"@ionic/angular\";\nexport class HomePage {\n  constructor(sleepService) {\n    this.sleepService = sleepService;\n    // set default wakeup time to current time\n    var d = new Date();\n    this.wakeupTime = d.toLocaleString(\"en-US\", {\n      timeZone: \"America/Los_Angeles\"\n    });\n    // set default bed time to 8 hours ago\n    // d.setHours(d.getHours() - 8);\n    this.bedTime = d.toLocaleString(\"en-US\", {\n      timeZone: \"America/Los_Angeles\"\n    });\n    // check if there is entry in sleepservice\n    this.submitted = false;\n  }\n  ngOnInit() {\n    console.log(this.allSleepData);\n  }\n  /* Ionic doesn't allow bindings to static variables, so this getter can be used instead. */\n  get allSleepData() {\n    return SleepService.AllSleepData;\n  }\n  get allOvernightData() {\n    return SleepService.AllOvernightData;\n  }\n  onSubmit() {\n    console.log(this.bedTime);\n    console.log(this.wakeupTime);\n    console.log(typeof this.bedTime);\n    this.sleepService.logOvernightData(new OvernightSleepData(new Date(this.bedTime), new Date(this.wakeupTime)));\n    this.submitted = true;\n  }\n}\nHomePage.ɵfac = function HomePage_Factory(t) {\n  return new (t || HomePage)(i0.ɵɵdirectiveInject(i1.SleepService));\n};\nHomePage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomePage,\n  selectors: [[\"app-home\"]],\n  decls: 5,\n  vars: 2,\n  consts: [[3, \"translucent\"], [3, \"fullscreen\"]],\n  template: function HomePage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \" Sleep Tracker \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(4, \"ion-content\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"translucent\", true);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"fullscreen\", true);\n    }\n  },\n  dependencies: [i2.IonContent, i2.IonHeader, i2.IonTitle, i2.IonToolbar],\n  styles: [\"ion-datetime[_ngcontent-%COMP%] {\\n  --ion-background-color: #071836;\\n}\\n\\n[_ngcontent-%COMP%]::ng-def   ion-picker-column-internal[_ngcontent-%COMP%] {\\n  --background: var(--ion-background-color);\\n}\\n\\n#container[_ngcontent-%COMP%] {\\n  text-align: center;\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n  top: 50%;\\n  transform: translateY(-50%);\\n}\\n\\n#container[_ngcontent-%COMP%]   strong[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  line-height: 26px;\\n}\\n\\n#container[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  font-size: 16px;\\n  line-height: 22px;\\n  color: #8c8c8c;\\n  margin: 0;\\n}\\n\\n#container[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n  text-decoration: none;\\n}\\n\\n.time-column[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: start;\\n  align-items: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvaG9tZS9ob21lLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLCtCQUFBO0FBQ0Y7O0FBQ0E7RUFDRSx5Q0FBQTtBQUVGOztBQUNBO0VBQ0Usa0JBQUE7RUFFQSxrQkFBQTtFQUNBLE9BQUE7RUFDQSxRQUFBO0VBQ0EsUUFBQTtFQUNBLDJCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxlQUFBO0VBQ0EsaUJBQUE7QUFDRjs7QUFFQTtFQUNFLGVBQUE7RUFDQSxpQkFBQTtFQUVBLGNBQUE7RUFFQSxTQUFBO0FBREY7O0FBSUE7RUFDRSxxQkFBQTtBQURGOztBQUlBO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0VBQ0Esc0JBQUE7RUFDQSxtQkFBQTtBQURGIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWRhdGV0aW1lIHtcbiAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjogIzA3MTgzNjtcbn1cbjo6bmctZGVmIGlvbi1waWNrZXItY29sdW1uLWludGVybmFsIHtcbiAgLS1iYWNrZ3JvdW5kOiB2YXIoLS1pb24tYmFja2dyb3VuZC1jb2xvcik7XG59XG5cbiNjb250YWluZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgdG9wOiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbn1cblxuI2NvbnRhaW5lciBzdHJvbmcge1xuICBmb250LXNpemU6IDIwcHg7XG4gIGxpbmUtaGVpZ2h0OiAyNnB4O1xufVxuXG4jY29udGFpbmVyIHAge1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuXG4gIGNvbG9yOiAjOGM4YzhjO1xuXG4gIG1hcmdpbjogMDtcbn1cblxuI2NvbnRhaW5lciBhIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4udGltZS1jb2x1bW4ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHN0YXJ0O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,YAAY,QAAQ,2BAA2B;AAExD,SAASC,kBAAkB,QAAQ,8BAA8B;;;;AAQjE,OAAM,MAAOC,QAAQ;EAMnBC,YAAmBC,YAAyB;IAAzB,iBAAY,GAAZA,YAAY;IAC/B;IACA,IAAIC,CAAC,GAAS,IAAIC,IAAI,EAAE;IACxB,IAAI,CAACC,UAAU,GAAGF,CAAC,CAACG,cAAc,CAAC,OAAO,EAAE;MAACC,QAAQ,EAAE;IAAqB,CAAC,CAAC;IAE9E;IACA;IACA,IAAI,CAACC,OAAO,GAAGL,CAAC,CAACG,cAAc,CAAC,OAAO,EAAE;MAACC,QAAQ,EAAE;IAAqB,CAAC,CAAC;IAE3E;IACA,IAAI,CAACE,SAAS,GAAG,KAAK;EACvB;EAEAC,QAAQ;IACPC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,YAAY,CAAC;EAC/B;EAEA;EACA,IAAIA,YAAY;IACf,OAAOf,YAAY,CAACgB,YAAY;EACjC;EAEA,IAAIC,gBAAgB;IACnB,OAAOjB,YAAY,CAACkB,gBAAgB;EACrC;EAEAC,QAAQ;IACPN,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,OAAO,CAAC;IACzBG,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,UAAU,CAAC;IAC5BM,OAAO,CAACC,GAAG,CAAC,OAAO,IAAI,CAACJ,OAAO,CAAC;IAChC,IAAI,CAACN,YAAY,CAACgB,gBAAgB,CAAC,IAAInB,kBAAkB,CAAC,IAAIK,IAAI,CAAC,IAAI,CAACI,OAAO,CAAC,EAAE,IAAIJ,IAAI,CAAC,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC;IAE7G,IAAI,CAACI,SAAS,GAAG,IAAI;EACtB;;;mBAvCYT,QAAQ;AAAA;;QAARA,QAAQ;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXrBC,qCAAiC;MAG3BA,+BACF;MAAAA,iBAAY;MAIhBA,iCAEc;;;MAVFA,kCAAoB;MAQnBA,eAAmB;MAAnBA,iCAAmB","names":["SleepService","OvernightSleepData","HomePage","constructor","sleepService","d","Date","wakeupTime","toLocaleString","timeZone","bedTime","submitted","ngOnInit","console","log","allSleepData","AllSleepData","allOvernightData","AllOvernightData","onSubmit","logOvernightData","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\philt\\inf133\\sleep-tracker\\sleeptracker\\src\\app\\home\\home.page.ts","C:\\Users\\philt\\inf133\\sleep-tracker\\sleeptracker\\src\\app\\home\\home.page.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { SleepService } from '../services/sleep.service';\nimport { SleepData } from '../data/sleep-data';\nimport { OvernightSleepData } from '../data/overnight-sleep-data';\nimport { StanfordSleepinessData } from '../data/stanford-sleepiness-data';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n\tsubmitted: boolean;\n\tbedTime: string;\n\twakeupTime: string;\n\n\t\n  constructor(public sleepService:SleepService) {\n\t\t// set default wakeup time to current time\n\t\tvar d: Date = new Date();\n\t\tthis.wakeupTime = d.toLocaleString(\"en-US\", {timeZone: \"America/Los_Angeles\"});\n\n\t\t// set default bed time to 8 hours ago\n\t\t// d.setHours(d.getHours() - 8);\n\t\tthis.bedTime = d.toLocaleString(\"en-US\", {timeZone: \"America/Los_Angeles\"});\n\n\t\t// check if there is entry in sleepservice\n\t\tthis.submitted = false;\n\t}\n\n\tngOnInit() {\n\t\tconsole.log(this.allSleepData);\n\t}\n\n\t/* Ionic doesn't allow bindings to static variables, so this getter can be used instead. */\n\tget allSleepData() {\n\t\treturn SleepService.AllSleepData;\n\t}\n\n\tget allOvernightData() {\n\t\treturn SleepService.AllOvernightData;\n\t}\n\n\tonSubmit() {\n\t\tconsole.log(this.bedTime);\n\t\tconsole.log(this.wakeupTime);\n\t\tconsole.log(typeof this.bedTime);\n\t\tthis.sleepService.logOvernightData(new OvernightSleepData(new Date(this.bedTime), new Date(this.wakeupTime)));\n\n\t\tthis.submitted = true;\n\t}\n\n}\n","<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-title>\n      Sleep Tracker\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\">\n\n</ion-content>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}