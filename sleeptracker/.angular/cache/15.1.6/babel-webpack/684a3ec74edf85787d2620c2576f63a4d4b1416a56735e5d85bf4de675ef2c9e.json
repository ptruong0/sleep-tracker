{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { OvernightSleepData } from '../data/overnight-sleep-data';\nimport { StanfordSleepinessData } from '../data/stanford-sleepiness-data';\nimport { Preferences } from '@capacitor/preferences';\nimport * as i0 from \"@angular/core\";\nexport class SleepService {\n  constructor() {\n    if (SleepService.LoadDefaultData) {\n      this.addDefaultData();\n      SleepService.LoadDefaultData = false;\n    }\n    this.loadOvernightData().then(data => {\n      JSON.parse(data.value || '[]').forEach(item => {\n        console.log(item);\n        SleepService.AllOvernightData.push(OvernightSleepData.fromJson(item));\n      });\n      // SleepService.AllOvernightData.push(...JSON.parse(data.value || '[]'));\n    });\n\n    this.loadSleepinessData().then(data => {\n      JSON.parse(data.value || '[]').forEach(item => {\n        console.log(item);\n        SleepService.AllSleepinessData.push(StanfordSleepinessData.fromJson(item));\n      });\n      // SleepService.AllSleepinessData.push(...JSON.parse(data.value || '[]'));\n    });\n\n    console.log(SleepService.AllOvernightData);\n  }\n  loadOvernightData() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return yield Preferences.get({\n        key: 'overnightData'\n      });\n    });\n  }\n  loadSleepinessData() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return yield Preferences.get({\n        key: 'sleepinessData'\n      });\n    });\n  }\n  addDefaultData() {\n    this.logOvernightData(new OvernightSleepData(new Date('February 18, 2021 01:03:00'), new Date('February 18, 2021 09:25:00')));\n    this.logSleepinessData(new StanfordSleepinessData(4, new Date('February 19, 2021 14:38:00')));\n    this.logOvernightData(new OvernightSleepData(new Date('February 20, 2021 23:11:00'), new Date('February 21, 2021 08:03:00')));\n  }\n  logOvernightData(sleepData) {\n    SleepService.AllSleepData.push(sleepData);\n    SleepService.AllOvernightData.push(sleepData);\n    this.saveOvernightData();\n  }\n  logSleepinessData(sleepData) {\n    SleepService.AllSleepData.push(sleepData);\n    SleepService.AllSleepinessData.push(sleepData);\n    this.saveSleepinessData();\n  }\n  saveOvernightData() {\n    Preferences.set({\n      key: 'overnightData',\n      value: JSON.stringify(SleepService.AllOvernightData)\n    });\n  }\n  saveSleepinessData() {\n    Preferences.set({\n      key: 'sleepinessData',\n      value: JSON.stringify(SleepService.AllSleepinessData)\n    });\n  }\n}\nSleepService.LoadDefaultData = true;\nSleepService.AllSleepData = [];\nSleepService.AllOvernightData = [];\nSleepService.AllSleepinessData = [];\nSleepService.ɵfac = function SleepService_Factory(t) {\n  return new (t || SleepService)();\n};\nSleepService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SleepService,\n  factory: SleepService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["OvernightSleepData","StanfordSleepinessData","Preferences","SleepService","constructor","LoadDefaultData","addDefaultData","loadOvernightData","then","data","JSON","parse","value","forEach","item","console","log","AllOvernightData","push","fromJson","loadSleepinessData","AllSleepinessData","get","key","logOvernightData","Date","logSleepinessData","sleepData","AllSleepData","saveOvernightData","saveSleepinessData","set","stringify","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\philt\\inf133\\sleep-tracker\\sleeptracker\\src\\app\\services\\sleep.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { SleepData } from '../data/sleep-data';\nimport { OvernightSleepData } from '../data/overnight-sleep-data';\nimport { StanfordSleepinessData } from '../data/stanford-sleepiness-data';\nimport { Preferences } from '@capacitor/preferences';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class SleepService {\n\tprivate static LoadDefaultData: boolean = true;\n\tpublic static AllSleepData: SleepData[] = [];\n\tpublic static AllOvernightData: OvernightSleepData[] = [];\n\tpublic static AllSleepinessData: StanfordSleepinessData[] = [];\n\n\tconstructor() {\n\t\tif (SleepService.LoadDefaultData) {\n\t\t\tthis.addDefaultData();\n\t\t\tSleepService.LoadDefaultData = false;\n\t\t}\n\n\t\tthis.loadOvernightData()\n\t\t\t.then((data) => {\n\t\t\t\tJSON.parse(data.value || '[]').forEach((item: {}) => {\n\t\t\t\t\tconsole.log(item);\n\t\t\t\t\tSleepService.AllOvernightData.push(OvernightSleepData.fromJson(item));\n\t\t\t\t});\n\t\t\t\t// SleepService.AllOvernightData.push(...JSON.parse(data.value || '[]'));\n\t\t\t});\n\t\tthis.loadSleepinessData()\n\t\t\t.then((data) => {\n\t\t\t\tJSON.parse(data.value || '[]').forEach((item: {}) => {\n\t\t\t\t\tconsole.log(item);\n\t\t\t\t\tSleepService.AllSleepinessData.push(StanfordSleepinessData.fromJson(item));\n\t\t\t\t});\n\t\t\t\t// SleepService.AllSleepinessData.push(...JSON.parse(data.value || '[]'));\n\t\t\t});\t\t\n\t\tconsole.log(SleepService.AllOvernightData);\n\t}\n\n\n\tprivate async loadOvernightData() {\n\t\treturn await Preferences.get({ key: 'overnightData' });\n\t}\n\tprivate async loadSleepinessData() {\n\t\treturn await Preferences.get({ key: 'sleepinessData' });\n\t}\n\n\n\tprivate addDefaultData() {\n\t\tthis.logOvernightData(new OvernightSleepData(new Date('February 18, 2021 01:03:00'), new Date('February 18, 2021 09:25:00')));\n\t\tthis.logSleepinessData(new StanfordSleepinessData(4, new Date('February 19, 2021 14:38:00')));\n\t\tthis.logOvernightData(new OvernightSleepData(new Date('February 20, 2021 23:11:00'), new Date('February 21, 2021 08:03:00')));\n\t}\n\n\tpublic logOvernightData(sleepData: OvernightSleepData) {\n\t\tSleepService.AllSleepData.push(sleepData);\n\t\tSleepService.AllOvernightData.push(sleepData);\n\t\tthis.saveOvernightData();\n\t}\n\n\tpublic logSleepinessData(sleepData: StanfordSleepinessData) {\n\t\tSleepService.AllSleepData.push(sleepData);\n\t\tSleepService.AllSleepinessData.push(sleepData);\n\t\tthis.saveSleepinessData();\n\t}\n\n\tprivate saveOvernightData() {\n\t\tPreferences.set({ key: 'overnightData', value: JSON.stringify(SleepService.AllOvernightData) });\n\t}\n\n\tprivate saveSleepinessData() {\n\t\tPreferences.set({ key: 'sleepinessData', value: JSON.stringify(SleepService.AllSleepinessData) });\n\n\t}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}