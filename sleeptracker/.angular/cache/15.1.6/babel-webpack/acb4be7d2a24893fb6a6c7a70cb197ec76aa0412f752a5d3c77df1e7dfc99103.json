{"ast":null,"code":"import { SleepData } from './sleep-data';\nexport class OvernightSleepData extends SleepData {\n  constructor(sleepStart, sleepEnd) {\n    super();\n    this.sleepStart = sleepStart;\n    this.sleepEnd = sleepEnd;\n  }\n  static fromJson(data) {\n    return new this(new Date(data.sleepStart), new Date(data.sleepEnd));\n  }\n  get duration() {\n    var sleepStart_ms = this.sleepStart.getTime();\n    var sleepEnd_ms = this.sleepEnd.getTime();\n    return sleepEnd_ms - sleepStart_ms;\n  }\n  summaryString() {\n    var sleepStart_ms = this.sleepStart.getTime();\n    var sleepEnd_ms = this.sleepEnd.getTime();\n    // Calculate the difference in milliseconds\n    var difference_ms = sleepEnd_ms - sleepStart_ms;\n    // Convert to hours and minutes\n    return Math.floor(difference_ms / (1000 * 60 * 60)) + \" hr, \" + Math.floor(difference_ms / (1000 * 60) % 60) + \" min\";\n  }\n  dateString() {\n    return \"Night of \" + this.sleepStart.toLocaleDateString('en-US', {\n      weekday: 'short',\n      month: 'short',\n      day: 'numeric'\n    });\n  }\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAS,QAAQ,cAAc;AAExC,OAAM,MAAOC,kBAAmB,SAAQD,SAAS;EAIhDE,YAAYC,UAAgB,EAAEC,QAAc;IAC3C,KAAK,EAAE;IACP,IAAI,CAACD,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,QAAQ,GAAGA,QAAQ;EACzB;EAGO,OAAOC,QAAQ,CAACC,IAAS;IAC/B,OAAO,IAAI,IAAI,CACd,IAAIC,IAAI,CAACD,IAAI,CAACH,UAAU,CAAC,EAAE,IAAII,IAAI,CAACD,IAAI,CAACF,QAAQ,CAAC,CAClD;EACF;EAEA,IAAII,QAAQ;IACX,IAAIC,aAAa,GAAG,IAAI,CAACN,UAAU,CAACO,OAAO,EAAE;IAC7C,IAAIC,WAAW,GAAG,IAAI,CAACP,QAAQ,CAACM,OAAO,EAAE;IAEzC,OAAOC,WAAW,GAAGF,aAAa;EACnC;EAESG,aAAa;IACrB,IAAIH,aAAa,GAAG,IAAI,CAACN,UAAU,CAACO,OAAO,EAAE;IAC7C,IAAIC,WAAW,GAAG,IAAI,CAACP,QAAQ,CAACM,OAAO,EAAE;IAEzC;IACA,IAAIG,aAAa,GAAGF,WAAW,GAAGF,aAAa;IAE/C;IACA,OAAOK,IAAI,CAACC,KAAK,CAACF,aAAa,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACF,aAAa,IAAI,IAAI,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,MAAM;EACtH;EAESG,UAAU;IAClB,OAAO,WAAW,GAAG,IAAI,CAACb,UAAU,CAACc,kBAAkB,CAAC,OAAO,EAAE;MAAEC,OAAO,EAAE,OAAO;MAAEC,KAAK,EAAE,OAAO;MAAEC,GAAG,EAAE;IAAS,CAAE,CAAC;EACvH","names":["SleepData","OvernightSleepData","constructor","sleepStart","sleepEnd","fromJson","data","Date","duration","sleepStart_ms","getTime","sleepEnd_ms","summaryString","difference_ms","Math","floor","dateString","toLocaleDateString","weekday","month","day"],"sourceRoot":"","sources":["C:\\Users\\philt\\inf133\\sleep-tracker\\sleeptracker\\src\\app\\data\\overnight-sleep-data.ts"],"sourcesContent":["import { SleepData } from './sleep-data';\n\nexport class OvernightSleepData extends SleepData {\n\tprivate sleepStart: Date;\n\tprivate sleepEnd: Date;\n\n\tconstructor(sleepStart: Date, sleepEnd: Date) {\n\t\tsuper();\n\t\tthis.sleepStart = sleepStart;\n\t\tthis.sleepEnd = sleepEnd;\n\t}\n\n\t\n\tpublic static fromJson(data: any): OvernightSleepData {\n\t\treturn new this(\n\t\t\tnew Date(data.sleepStart), new Date(data.sleepEnd)\n\t\t);\n\t}\n\n\tget duration(): number {\n\t\tvar sleepStart_ms = this.sleepStart.getTime();\n\t\tvar sleepEnd_ms = this.sleepEnd.getTime();\n\n\t\treturn sleepEnd_ms - sleepStart_ms;\n\t}\n\n\toverride summaryString(): string {\n\t\tvar sleepStart_ms = this.sleepStart.getTime();\n\t\tvar sleepEnd_ms = this.sleepEnd.getTime();\n\n\t\t// Calculate the difference in milliseconds\n\t\tvar difference_ms = sleepEnd_ms - sleepStart_ms;\n\n\t\t// Convert to hours and minutes\n\t\treturn Math.floor(difference_ms / (1000 * 60 * 60)) + \" hr, \" + Math.floor(difference_ms / (1000 * 60) % 60) + \" min\";\n\t}\n\n\toverride dateString(): string {\n\t\treturn \"Night of \" + this.sleepStart.toLocaleDateString('en-US', { weekday: 'short', month: 'short', day: 'numeric' });\n\t}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}