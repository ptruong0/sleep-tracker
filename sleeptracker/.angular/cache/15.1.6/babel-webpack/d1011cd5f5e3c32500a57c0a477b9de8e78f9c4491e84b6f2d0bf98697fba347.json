{"ast":null,"code":"import { Injectable } from '@angular/core';\nimport * as ɵngcc0 from '@angular/core';\nvar FusionChartsStatic = /** @class */function () {\n  function FusionChartsStatic() {}\n  /** @nocollapse */\n  FusionChartsStatic.ctorParameters = function () {\n    return [];\n  };\n  FusionChartsStatic.ɵfac = function FusionChartsStatic_Factory(t) {\n    return new (t || FusionChartsStatic)();\n  };\n  FusionChartsStatic.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: FusionChartsStatic,\n    factory: function (t) {\n      return FusionChartsStatic.ɵfac(t);\n    }\n  });\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FusionChartsStatic, [{\n      type: Injectable\n    }], function () {\n      return [];\n    }, null);\n  })();\n  return FusionChartsStatic;\n}();\nexport { FusionChartsStatic };\nvar FusionChartsService = /** @class */function () {\n  function FusionChartsService(FCStatic) {\n    var fcRoot;\n    if (FusionChartsService.isFCRootSet()) {\n      fcRoot = FusionChartsService.getFCRoot();\n    } else {\n      fcRoot = {\n        core: FCStatic.core,\n        modules: FCStatic.modules\n      };\n    }\n    this.resolveFusionCharts(fcRoot.core, fcRoot.modules);\n  }\n  FusionChartsService.setFCRoot = function (fcRoot) {\n    FusionChartsService._fcRoot = fcRoot;\n  };\n  FusionChartsService.getFCRoot = function () {\n    return FusionChartsService._fcRoot;\n  };\n  FusionChartsService.isFCRootSet = function () {\n    return !!FusionChartsService._fcRoot;\n  };\n  FusionChartsService.prototype.resolveFusionCharts = function (core, modules) {\n    if (core && core.id && core.id === 'FusionCharts') {\n      this._fusionchartsStatice = core;\n    } else {\n      this._fusionchartsStatice = core();\n    }\n    if (modules) {\n      modules.forEach(function (FusionChartsModules) {\n        if (FusionChartsModules.getName && FusionChartsModules.getType || FusionChartsModules.name && FusionChartsModules.type) {\n          core.addDep(FusionChartsModules);\n        } else {\n          FusionChartsModules(core);\n        }\n      });\n    }\n  };\n  FusionChartsService.prototype.getFusionChartsStatic = function () {\n    return this._fusionchartsStatice;\n  };\n  FusionChartsService.prototype.getNextItemCount = function () {\n    FusionChartsService.itemCount++;\n    return FusionChartsService.itemCount;\n  };\n  FusionChartsService._fcRoot = null;\n  FusionChartsService.itemCount = 0;\n  /** @nocollapse */\n  FusionChartsService.ctorParameters = function () {\n    return [{\n      type: FusionChartsStatic\n    }];\n  };\n  FusionChartsService.ɵfac = function FusionChartsService_Factory(t) {\n    return new (t || FusionChartsService)(ɵngcc0.ɵɵinject(FusionChartsStatic));\n  };\n  FusionChartsService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: FusionChartsService,\n    factory: function (t) {\n      return FusionChartsService.ɵfac(t);\n    }\n  });\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FusionChartsService, [{\n      type: Injectable\n    }], function () {\n      return [{\n        type: FusionChartsStatic\n      }];\n    }, null);\n  })();\n  return FusionChartsService;\n}();\nexport { FusionChartsService };","map":{"version":3,"names":["Injectable","ɵngcc0","FusionChartsStatic","ctorParameters","ɵfac","FusionChartsStatic_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode","ɵsetClassMetadata","type","FusionChartsService","FCStatic","fcRoot","isFCRootSet","getFCRoot","core","modules","resolveFusionCharts","setFCRoot","_fcRoot","prototype","id","_fusionchartsStatice","forEach","FusionChartsModules","getName","getType","name","addDep","getFusionChartsStatic","getNextItemCount","itemCount","FusionChartsService_Factory","ɵɵinject"],"sources":["C:/Users/philt/inf133/sleep-tracker/sleeptracker/node_modules/angular-fusioncharts/__ivy_ngcc__/dist/src/fusioncharts.service.js"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport * as ɵngcc0 from '@angular/core';\nvar FusionChartsStatic = /** @class */ (function () {\n    function FusionChartsStatic() {\n    }\n    /** @nocollapse */\n    FusionChartsStatic.ctorParameters = function () { return []; };\nFusionChartsStatic.ɵfac = function FusionChartsStatic_Factory(t) { return new (t || FusionChartsStatic)(); };\nFusionChartsStatic.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: FusionChartsStatic, factory: function (t) { return FusionChartsStatic.ɵfac(t); } });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FusionChartsStatic, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n    return FusionChartsStatic;\n}());\nexport { FusionChartsStatic };\nvar FusionChartsService = /** @class */ (function () {\n    function FusionChartsService(FCStatic) {\n        var fcRoot;\n        if (FusionChartsService.isFCRootSet()) {\n            fcRoot = FusionChartsService.getFCRoot();\n        }\n        else {\n            fcRoot = {\n                core: FCStatic.core,\n                modules: FCStatic.modules\n            };\n        }\n        this.resolveFusionCharts(fcRoot.core, fcRoot.modules);\n    }\n    FusionChartsService.setFCRoot = function (fcRoot) {\n        FusionChartsService._fcRoot = fcRoot;\n    };\n    FusionChartsService.getFCRoot = function () {\n        return FusionChartsService._fcRoot;\n    };\n    FusionChartsService.isFCRootSet = function () {\n        return !!FusionChartsService._fcRoot;\n    };\n    FusionChartsService.prototype.resolveFusionCharts = function (core, modules) {\n        if (core && core.id && core.id === 'FusionCharts') {\n            this._fusionchartsStatice = core;\n        }\n        else {\n            this._fusionchartsStatice = core();\n        }\n        if (modules) {\n            modules.forEach(function (FusionChartsModules) {\n                if ((FusionChartsModules.getName && FusionChartsModules.getType) ||\n                    (FusionChartsModules.name && FusionChartsModules.type)) {\n                    core.addDep(FusionChartsModules);\n                }\n                else {\n                    FusionChartsModules(core);\n                }\n            });\n        }\n    };\n    FusionChartsService.prototype.getFusionChartsStatic = function () {\n        return this._fusionchartsStatice;\n    };\n    FusionChartsService.prototype.getNextItemCount = function () {\n        FusionChartsService.itemCount++;\n        return FusionChartsService.itemCount;\n    };\n    FusionChartsService._fcRoot = null;\n    FusionChartsService.itemCount = 0;\n    /** @nocollapse */\n    FusionChartsService.ctorParameters = function () { return [\n        { type: FusionChartsStatic, },\n    ]; };\nFusionChartsService.ɵfac = function FusionChartsService_Factory(t) { return new (t || FusionChartsService)(ɵngcc0.ɵɵinject(FusionChartsStatic)); };\nFusionChartsService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: FusionChartsService, factory: function (t) { return FusionChartsService.ɵfac(t); } });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FusionChartsService, [{\n        type: Injectable\n    }], function () { return [{ type: FusionChartsStatic }]; }, null); })();\n    return FusionChartsService;\n}());\nexport { FusionChartsService };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}